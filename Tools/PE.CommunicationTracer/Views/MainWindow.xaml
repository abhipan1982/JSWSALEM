<Window x:Class="PE.CommunicationTracer.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:behaviors="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:dd="urn:gong-wpf-dragdrop"
        xmlns:local="clr-namespace:PE.CommunicationTracer"
        xmlns:core="clr-namespace:PE.CommunicationTracer.Core"
        xmlns:converters="clr-namespace:PE.CommunicationTracer.Core.Converters"
        xmlns:prism="http://prismlibrary.com/" 
        prism:ViewModelLocator.AutoWireViewModel="True"

        mc:Ignorable="d"
        Title="{Binding Title}" Height="450" Width="800">
    <Window.Resources>
        <converters:StatusToColorConverter x:Key="StatusToColorConverter"/>
        <CollectionViewSource x:Key="ModuleMenuItems" Source="{Binding ModuleItems}"/>
        <ControlTemplate x:Key="CloseButtonTemplate" TargetType="Button">
            <Path Data="M0,0 L8,8 M8,0 L0,8" Margin="5,5,0,0" StrokeThickness="3">
                <Path.Style>
                    <Style TargetType="{x:Type Path}">
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="False">
                                <Setter Property="Stroke" Value="LightGray" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Stroke" Value="Red" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Path.Style>
            </Path>
        </ControlTemplate>
        <Style TargetType="TabItem" x:Key="ModuleTabItem" BasedOn="{StaticResource {x:Type TabItem}}">
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <Setter Property="VerticalContentAlignment" Value="Stretch" />
            <Setter Property="Header" Value="{Binding DataContext}"/>
            <Setter Property="HeaderTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="auto"/>
                            </Grid.ColumnDefinitions>
                            <Rectangle Fill="{Binding ModuleStatus, Converter={StaticResource StatusToColorConverter}}" HorizontalAlignment="Left"
                                       Height="8" Width="8" Margin="0,5,2,0"
                                       VerticalAlignment="Top" 
                                       RadiusY="10" RadiusX="10"/>
                            <ContentControl Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Center" 
                                            Margin="0,0,0,0" Content="{Binding Title}"
                                            Foreground="{Binding ModuleStatus, Converter={StaticResource StatusToColorConverter}}"/>
                            <ToggleButton   Grid.Column="2" VerticalAlignment="Center" Width="auto" MaxWidth="20"
                                            Height="16" Focusable="False"
                                            BorderThickness="0" OverridesDefaultStyle="False"
                                            FontFamily="Webdings" FontSize="16" Content="ë" Margin="3,0">
                                <ToggleButton.Style>
                                    <Style TargetType="ToggleButton">
                                        <Style.Triggers>
                                            <Trigger Property="IsChecked" Value="True">
                                                <Setter Property="Foreground" Value="Red" />
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </ToggleButton.Style>
                                <behaviors:Interaction.Triggers>
                                    <behaviors:EventTrigger EventName="Checked">
                                        <behaviors:InvokeCommandAction Command="{Binding Path=PinTabCommand}"/>
                                    </behaviors:EventTrigger>
                                    <behaviors:EventTrigger EventName="Unchecked">
                                        <behaviors:InvokeCommandAction Command="{Binding Path=UnpinTabCommand}"/>
                                    </behaviors:EventTrigger>
                                </behaviors:Interaction.Triggers>
                            </ToggleButton>
                            <Button Grid.Column="3" Content="x" Height="16" Template="{StaticResource ResourceKey=CloseButtonTemplate}">
                                <behaviors:Interaction.Triggers>
                                    <behaviors:EventTrigger EventName="Click">
                                        <core:CloseTabAction/>
                                    </behaviors:EventTrigger>
                                </behaviors:Interaction.Triggers>
                            </Button>
                        </Grid>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <Menu>
            <MenuItem Header="Modules" >
                <MenuItem.ItemsSource>
                    <CompositeCollection>
                        <CollectionContainer Collection="{Binding Source={StaticResource ModuleMenuItems}}" />
                    </CompositeCollection>
                </MenuItem.ItemsSource >
                <MenuItem.ItemContainerStyle>
                    <Style>
                        <Setter Property="MenuItem.Header" Value="{Binding Title}" />
                        <Setter Property="MenuItem.CommandParameter" Value="{Binding ModuleName}" />
                        <Setter Property="MenuItem.Command" Value="{Binding Command}" />
                    </Style>
                </MenuItem.ItemContainerStyle>
            </MenuItem>
        </Menu>

        <StackPanel Grid.Row="1" Orientation="Horizontal"></StackPanel>

        <TabControl Grid.Row="2" 
                    x:Name="ModuleTabs"
                    prism:RegionManager.RegionName="{x:Static local:RegionNames.TabRegion}" 
                    ItemContainerStyle="{StaticResource ModuleTabItem}"
                    dd:DragDrop.IsDragSource="True" 
                    dd:DragDrop.IsDropTarget="True"
                    dd:DragDrop.UseDefaultDragAdorner="False">
        </TabControl>
    </Grid>
</Window>
