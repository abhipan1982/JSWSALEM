@using PE.HMIWWW.ViewModel.Module.Lite.Cassette;
@using PE.HMIWWW.ViewModel.Module.Lite.RollsetManagement;
@{
  Layout = "~/Views/Shared/_LayoutWithoutWidgets.cshtml";
}

<style>
  .title {
      font-size: 16px;
      color: #006487;
  }
</style>

<script src="~/bundles/js/Module/RollSetToCassette.js"></script>

<script type="text/javascript">
  $(document).ready(function () {
    RegisterMethod(HmiRefreshKeys.Cassette, RefreshData);
    RegisterMethod(HmiRefreshKeys.InterCassette, RefreshData);
    RegisterMethod(HmiRefreshKeys.RollSet, RefreshData);
    RegisterMethod(HmiRefreshKeys.Roll, RefreshData);
  });
  //THIS METHOD WILL BE CALLED BY SYSTEM (SERVER) IN CASE DATA CHANGE, NAME IS IMPORTANT !!!
  function RefreshData() {
    $("#CassetteGrid").data("kendoGrid").dataSource.read();
    $("#CassetteGrid").data("kendoGrid").refresh();
    $("#RsToCassetteGrid").data("kendoGrid").dataSource.read();
    $("#RsToCassetteGrid").data("kendoGrid").refresh();
    $("#RsScheduledGrid").data("kendoGrid").dataSource.read();
    $("#RsScheduledGrid").data("kendoGrid").refresh();
    $("#RsReadyGrid").data("kendoGrid").dataSource.read();
    $("#RsReadyGrid").data("kendoGrid").refresh();
  }
</script>

<div>

  <div class="w-50" style="float: left;">
    <div class="white-space">
      <h5 class="title p-0 m-0 mb-1 mt-1" style="clear: both;">@PE.HMIWWW.Core.Resources.VM_Resources.NAME_AvailableCassettes</h5>
    </div>
    @(Html.Kendo().Grid<VM_CassetteOverview>()
    .Name("CassetteGrid")
    .NoRecords(n => n.Template(VM_Resources.GLOB_GRID_NO_DATA))
    .HtmlAttributes(new { style = @String.Format("border:none !important; height:280px;") })
    .Sortable().Filterable(filtering => filtering.Enabled(true))
    .Scrollable()
    .Filterable()
    .Sortable()
    .Columns(columns =>
    {
    columns.Bound(p => p.CassetteId).Visible(false).Filterable(false);
    columns.Bound(p => p.CassetteName).Title(@PE.HMIWWW.Core.Resources.VM_Resources.COLUMNNAME_AvailableCassettes).Width(150).Filterable(true);
    columns.ForeignKey(p => p.EnumCassetteStatus, (SelectList)ViewBag.CassStatus).Width(110);
    columns.Bound(p => p.EnumCassetteStatus).Width(70).Sortable(false).Groupable(false).Filterable(false).Title(" ").ClientTemplate(
    @Html.ImageButton("cassette_details", "CassetteInfo(#= CassetteId #)", false).ToString() +
    @Html.ImageButton("add", "OpenAssembleCassetteForm(#= CassetteId #)", false).ToString());
    })
    .DataSource(dataSource => dataSource
    .Ajax()
    .ServerOperation(true)
    .Model(model =>
    {
    model.Id(p => p.CassetteId);
    })
    .Events(events => events.Error("TelerikErrorHandler"))
    .Read(read => read.Action("GetAvailableCassettesData", "RollsetToCassette"))
    ))
  </div>

  <div class="w-50" style="float: left;">
    <h5 class="title p-0 m-0 mb-1 mt-1" style="clear: both;">@PE.HMIWWW.Core.Resources.VM_Resources.NAME_AvailableRollsets</h5>
    @(Html.Kendo().Grid<VM_RollSetOverview>()
    .Name("RsToCassetteGrid")
    .NoRecords(n => n.Template(VM_Resources.GLOB_GRID_NO_DATA))
    .HtmlAttributes(new { style = @String.Format("border:none !important; height:280px;") })
    .Sortable().Filterable(filtering => filtering.Enabled(true))
    .Scrollable()
    .Filterable()
    .Sortable()
    .Columns(columns =>
    {
    columns.Bound(p => p.RollSetId).Visible(false).Filterable(false);
    columns.Bound(p => p.RollSetName).Title(@PE.HMIWWW.Core.Resources.VM_Resources.COLUMNNAME_RollsetAvailable).Width(200).Filterable(true);
    columns.ForeignKey(p => p.UpperRollTypeId, (SelectList)ViewBag.RollTypes).Title(@PE.HMIWWW.Core.Resources.VM_Resources.COLUMNNAME_RollType).Width(180);
    columns.ForeignKey(o => o.EnumRollSetStatus, (SelectList)ViewBag.RSetStatus).Title(@PE.HMIWWW.Core.Resources.VM_Resources.COLUMNNAME_Status);
    columns.Bound(p => p.RollSetId).Width(70).Sortable(false).Groupable(false).Filterable(false).Title(" ").ClientTemplate(
    @Html.ImageButton("rollset_details", "RollSetInfo(#= RollSetId #)", false).ToString());
    })
    .DataSource(dataSource => dataSource
    .Ajax()
    .ServerOperation(true)
    .Model(model =>
    {
    model.Id(p => p.RollSetId);
    })
    .Sort(s =>
    {
    s.Add(p => p.RollSetName).Ascending();
    })
    .Events(events => events.Error("TelerikErrorHandler"))
    .Read(read => read.Action("GetAvailableRollSetData", "RollsetToCassette"))
    ))
  </div>
</div>
<div class="pt-2" style="clear: left;">
  <div class="white-space">
    <h5 class="title p-0 m-0 mb-1" style="clear: both;">@PE.HMIWWW.Core.Resources.VM_Resources.NAME_PlannedRollSets</h5>
  </div>
  @(Html.Kendo().Grid<VM_RollSetOverview>()
  .Name("RsScheduledGrid")
  .NoRecords(n => n.Template(VM_Resources.GLOB_GRID_NO_DATA))
  .HtmlAttributes(new { style = @String.Format("border:none !important; height:200px;") })
  .Sortable().Filterable(filtering => filtering.Enabled(true))
  .Scrollable()
  .Filterable()
  .Sortable()
  .Columns(columns =>
  {
  columns.Bound(p => p.RollSetId).Visible(false).Filterable(false);
  columns.Bound(p => p.CassetteId).Visible(false).Filterable(false);
  columns.Bound(p => p.RollSetName).Title(@PE.HMIWWW.Core.Resources.VM_Resources.COLUMN_RollsetPlanned).Width(150).Filterable(true);
  columns.Bound(p => p.CassetteName).Filterable(true).Width(150);
  columns.ForeignKey(o => o.EnumRollSetStatus, (SelectList)ViewBag.RSetStatus).Width(150);
  columns.ForeignKey(p => p.UpperRollTypeId, (SelectList)ViewBag.RollTypes).Title(@PE.HMIWWW.Core.Resources.VM_Resources.COLUMNNAME_RollType).Width(150);
  columns.ForeignKey(o => o.EnumCassetteStatus, (SelectList)ViewBag.CassStatus).Title("Status").Width(100);
  columns.Bound(p => p.PositionInCassette).Filterable(true).Width(150);
  columns.Bound(p => p.EnumRollSetStatus).Width(100).Sortable(false).Groupable(false).Filterable(false).Title(" ")
  .ClientTemplate(
  @Html.ImageButton("rollset_details", "RollSetInfo(#= RollSetId #)", false).ToString() +
  @Html.ImageButton("cassette_details", "CassetteInfo(#= CassetteId #)", false).ToString() +
  @Html.ImageButton("confirm", "ConfirmRsReadyForMounting(#= RollSetId #)", false).ToString() + "  " +
  @Html.ImageButton("cancel", "CancelStatus(#= RollSetId #)", false).ToString());
  })
  .DataSource(dataSource => dataSource
  .Ajax()
  .ServerOperation(true)
  .Model(model =>
  {
  model.Id(p => p.RollSetId);
  })
  //.PageSize(15)
  .Events(events => events.Error("TelerikErrorHandler"))
  .Read(read => read.Action("GetScheduledRollSetData", "RollsetToCassette"))
  ))
</div>
<div class="pt-2" style="clear: left;">
  <div class="white-space">
    <h5 class="title p-0 m-0 mb-1" style="clear: both;">@PE.HMIWWW.Core.Resources.VM_Resources.NAME_InstalledRollsets</h5>
  </div>
  @(Html.Kendo().Grid<VM_RollSetOverview>()
  .Name("RsReadyGrid")
  .NoRecords(n => n.Template(VM_Resources.GLOB_GRID_NO_DATA))
  .HtmlAttributes(new { style = @String.Format("border:none !important; height:200px;") })
  .Sortable().Filterable(filtering => filtering.Enabled(true))
  .Scrollable()
  .Filterable()
  .Sortable()
  .Columns(columns =>
  {
  columns.Bound(p => p.RollSetId).Visible(false).Filterable(false);
  columns.Bound(p => p.CassetteId).Visible(false).Filterable(false);
  columns.Bound(p => p.RollSetName).Title(@PE.HMIWWW.Core.Resources.VM_Resources.COLUMNNAME_RollsetInstalled).Width(150).Filterable(true);
  columns.Bound(p => p.CassetteName).Filterable(true).Width(150);
  columns.ForeignKey(o => o.EnumRollSetStatus, (SelectList)ViewBag.RSetStatus).Title(@PE.HMIWWW.Core.Resources.VM_Resources.COLUMNNAME_Status).Width(80);
  columns.ForeignKey(p => p.UpperRollTypeId, (SelectList)ViewBag.RollTypes).Title(@PE.HMIWWW.Core.Resources.VM_Resources.COLUMNNAME_RollType).Width(150);
  columns.ForeignKey(o => o.EnumCassetteStatus, (SelectList)ViewBag.CassStatus).Title(@PE.HMIWWW.Core.Resources.VM_Resources.COLUMNNAME_Status).Width(100);
  columns.Bound(p => p.PositionInCassette).Filterable(true).Width(150);
  columns.Bound(p => p.EnumRollSetStatus).Width(70).Sortable(false).Groupable(false).Filterable(false).Title(" ").ClientTemplate(
  @Html.ImageButton("rollset_details", "RollSetInfo(#= RollSetId #)", false).ToString() +
  @Html.ImageButton("cassette_details", "CassetteInfo(#= CassetteId #)", false).ToString() +
  @Html.ImageButton("edit", "EditGroovesForRollSet(#= RollSetId #)", false).ToString() +
  @Html.ImageButton("rolls_unload", "UnloadRollset(#= RollSetId #)", false).ToString());
  })
  .DataSource(dataSource => dataSource
  .Ajax()
  .ServerOperation(true)
  .Model(model =>
  {
  model.Id(p => p.RollSetId);
  })
  .Events(events => events.Error("TelerikErrorHandler"))
  .Read(read => read.Action("GetReadyRollSetData", "RollsetToCassette"))
  ))
</div>
