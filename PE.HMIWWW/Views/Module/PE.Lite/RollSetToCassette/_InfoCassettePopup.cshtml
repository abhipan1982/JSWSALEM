@using PE.HMIWWW.ViewModel.Module.Lite.RollsetManagement;
@model PE.HMIWWW.ViewModel.Module.Lite.Cassette.VM_CassetteOverview

<div style="width: 1300px; height: @(200 + Model.NumberOfPositions * 30)px;">
  <div class="row p-0 pt-3">
    <div class="col-4 p-0">
      <div class="container-fluid">
        <div class="form-group row">
          <div class="col-5 text-right">
            @Html.LabelFor(x => x.CassetteName)
          </div>
          <div class="col-3 text-left">
            @Html.DisplayFor(m => m.CassetteName)
          </div>
        </div>
        <div class="form-group row">
          <div class="col-5 text-right">
            @Html.LabelFor(x => x.CassetteTypeId)
          </div>
          <div class="col-3 text-left">
            @Html.DisplayFor(m => m.CassetteTypeId)
          </div>
        </div>

        <div class="form-group row">
          <div class="col-5 text-right">
            @Html.LabelFor(x => x.StatusTxt)
          </div>
          <div class="col-3 text-left">
            @Html.DisplayFor(m => m.StatusTxt)
          </div>
        </div>
      </div>
    </div>

    <div class="col-4 p-0">
      <div class="container-fluid">
        <div class="form-group row">
          <div class="col-5 text-right">
            @Html.LabelFor(x => x.NumberOfPositions)
          </div>
          <div class="col-3 text-left">
            @Html.DisplayFor(m => m.NumberOfPositions)
          </div>
        </div>
        <div class="form-group row">
          <div class="col-5 text-right">
            @Html.LabelFor(x => x.StandNo)
          </div>
          <div class="col-3 text-left">
            @Html.DisplayFor(m => m.StandNo)
          </div>
        </div>

        <div class="form-group row">
          <div class="col-5 text-right">
            @Html.LabelFor(x => x.Arrangement)
          </div>
          <div class="col-3 text-left">
            @Html.DisplayFor(m => m.Arrangement)
          </div>
        </div>
      </div>
    </div>
  </div>

  @(Html.Kendo().Grid<VM_RollSetOverview>()
  .Name("RollSetsInCassette" + Model.CassetteId)
  .Columns(columns =>
  {
  columns.Bound(p => p.CassetteId).Visible(false);
  columns.Bound(p => p.PositionInCassette).Width(60);
  columns.Bound(p => p.RollSetName).Width(80);
  columns.Bound(p => p.UpperRollName).Width(80);
  columns.Bound(p => p.UpperRollTypeName).Width(80);
  columns.Bound(p => p.BottomRollName).Width(80);
  columns.Bound(p => p.BottomRollTypeName).Width(80);
  columns.ForeignKey(o => o.EnumRollSetStatus, (SelectList)ViewBag.RSetStatus).Width(80);
  columns.Bound(p => p.MountedTs).Format(VM_Resources.ResourceManager.GetString("GLOB_LongDateTime_FORMAT"));
  })
  .HtmlAttributes(new { style = "width: 1150px;" })
  .DataSource(dataSource => dataSource
  .Ajax()
  .ServerOperation(true)
  .Model(model =>
  {
  model.Id(p => p.CassetteId);
  })
  .Read(read => read.Action("GetRollSetInCassetteList", "ActualStandConfiguration", new { cassetteId = Model.CassetteId }))
  .Sort(sort => sort.Add(p => p.PositionInCassette).Ascending())
  )
  )

</div>
