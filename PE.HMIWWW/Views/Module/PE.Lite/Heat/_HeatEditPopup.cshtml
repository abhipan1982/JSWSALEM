@model PE.HMIWWW.ViewModel.Module.Lite.Heat.VM_Heat
@{
    /**/

    ViewBag.Title = "_HeatEditPopup";
    Layout = "~/Views/Shared/_PopupLayout.cshtml";
}

<style>
        .dropdown-header {
            border-width: 0 0 1px 0;
            text-transform: uppercase;
            text-align: center;
            cursor: pointer;
        }

        .dropdown-header:hover {
            background-color: #879baa;
            color: white;
        }

        .dropdown-header > span {
            display: inline-block;
            text-align: center;
        }

        .disabled-input:hover {
            border: 1px solid #dbdbdb;
        }

        .material-catalogue{
            border-bottom: 1px solid #e6e6e6;
            padding-bottom: 5px;
            padding-right: 5px;
            /*width: 400px;*/
        }

        #FKMaterialCatalogueId_listbox .k-state-hover{
            background-image: none;
            background-color: #f2f2f2;
        }

        .details-row{
            display: flex;
            flex-direction: row;
            margin: 0;
        }

        .material-catalogue-data{
            font-weight: 500;
        }

        .material-catalogue-name{
            font-size: 15px;
            font-weight: 500;
            color: #006487;
        }

        .material-catalogue-details{
            font-size: 13px;
            line-height: 18px;
            color: #666;
        }

        .k-i-close{
            color: #666;
        }

        .k-autocomplete{
            z-index: 1;
        }
        


</style>

<form asp-controller="Heat" asp-action="EditHeat" data-ajax="true" data-ajax-method="POST"
      data-ajax-begin="OnFormBegin" data-ajax-success="OnFormSuccess" data-ajax-failure="OnFormError"
      class="container-fluid" target="formContainer" role="form" id="form">

    @Html.AntiForgeryToken()
    <div style="height:auto;overflow-x:hidden">
        <div class="row form-group">

            <div class="col-2 text-right">
                <label>
                    @Html.LabelFor(x => x.HeatName)
                </label>
            </div>
            <div class="col-2">
                @Html.Kendo().TextBoxFor(x => x.HeatName).HtmlAttributes(new {@class = "form-control form-control-sm popup_input_standard"})
                @Html.ValidationMessageFor(x => x.HeatName)
            </div>

            <div class="col-2 text-right">
                <label>@Html.LabelFor(x => x.IsDummy)</label>
            </div>
            <div class="col-2 mt-1">
                @Html.Kendo().CheckBoxFor(x => x.IsDummy).HtmlAttributes(new {@class = "form-control"}).Label(string.Empty)
            </div>

            <div class="col-2 text-right">
                <label>@Html.LabelFor(x => x.FKHeatSupplierId)</label>
            </div>
            <div class="col-2">
                @(Html.Kendo().DropDownListFor(x => x.FKHeatSupplierId)
                    .DataTextField("Text")
                    .DataValueField("Value")
                    .HtmlAttributes(new {@class = "form-control form-control-sm popup_input_standard"})
                    .BindTo(new SelectList(ViewBag.SupplierList, "HeatSupplierId", "HeatSupplierName"))
                    .OptionLabel("-")
                    )
            </div>

        </div>
        <div class="row form-group">
            <div class="col-2 text-right">
                <label>@Html.LabelFor(x => x.FKSteelgradeId)</label>
            </div>
            <div class="col-2">
                @(Html.Kendo().DropDownListFor(x => x.FKSteelgradeId)
                    .HtmlAttributes(new {style = "width: 150px;"})
                    .OptionLabel("-")
                    .DataTextField("SteelgradeName")
                    .DataValueField("Id")
                    .DataSource(source =>
                    {
                        source.Read(read => { read.Action("ServerFiltering_GetSteelgrades", "Steelgrade"); })
                            .ServerFiltering(true);
                    })
                    )
                @Html.ValidationMessageFor(x => x.FKSteelgradeId)
            </div>

            <div class="col-2 text-right">
                <label>
                    @Html.LabelFor(x => x.HeatWeight)
                </label>
            </div>
            <div class="col">
                @Html.PeKendo().NumericTextBoxFor(x => x.HeatWeight).HtmlAttributes(new {@class = "form-control form-control-sm", style = "width: 150px"})
                @Html.ValidationMessageFor(x => x.HeatWeight)
            </div>
            <div class="col-2 text-right"></div>
            <div class="col-2"></div>
        </div>

    </div>
    <hr>

    <div class="row form-group">
        <div class="col invalid">
            <p id="error">
                <span class="k-icon k-i-close-circle error-icon"></span> @VM_Resources.GLOB_Error
            </p>
        </div>
        <div class="col text-right">
            <button class="btn btn-primary popup_button" onclick="displayMessage()" type="submit">
                @VM_Resources.GLOB_Form_Button_Update
            </button>
        </div>
    </div>

    <script>

    $(function () {

      $('#error').css("display", "none");
      $("#form").kendoValidator().data("kendoValidator");

      $('.k-autocomplete').css("width", "150px");

      $('.k-autocomplete input').keydown(function () {
        $('.k-autocomplete').animate({
          width: 400
        }, 200, function () {
          // Animation complete.
        });
      })

      $('.k-autocomplete input').focusout(function () {
        $('.k-autocomplete').animate({
          width: 150
        }, 400, function () {
          // Animation complete.
        });
      })


    });

    $(function () {

      $('#error').css("display", "none");
      $("#form").kendoValidator().data("kendoValidator");

    });

    function displayMessage() {

      var validator = $("#form").kendoValidator().data("kendoValidator");

      if (validator.validate()) {
        $('#error').css("display", "none");
      } else {
        $('#error').css("display", "block");
        $('#popup-footer')
          .css('display', 'block')
          .css('background-color', 'rgb(206, 0, 55)');
      }
    }

  </script>

</form>
