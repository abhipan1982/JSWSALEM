@using PE.HMIWWW.ViewModel.Module.Lite.WorkOrder

@(
    Html.Kendo()
        .Grid<VM_WorkOrderSummary>()
        .Name("SearchGrid")
        .NoRecords(true)
        .Pageable(p => p.Messages(m => m.Display(VM_Resources.GLOB_pagination)))
        .Sortable()
        .Filterable()
        .Selectable()
        .HtmlAttributes(new { style = "height: 100%; min-height: 735px;" })
        .Columns(columns =>
        {
            columns.Bound(c => c.WorkOrderId).Visible(false);
            columns.Bound(c => c.WorkOrderName);
            columns.Bound(c => c.SteelgradeCode);
            columns.Bound(c => c.WorkOrderCreatedTs).Filterable(f => f.UI(GridFilterUIRole.DateTimePicker)).Hidden(true).Format(VM_Resources.ResourceManager.GetString("GLOB_LongDateTime_FORMAT")).HtmlAttributes(new {@class = "nowrap"});
            columns.Bound(c => c.WorkOrderCreatedInL3Ts).Filterable(f => f.UI(GridFilterUIRole.DateTimePicker)).Hidden(true).Format(VM_Resources.ResourceManager.GetString("GLOB_LongDateTime_FORMAT")).HtmlAttributes(new {@class = "nowrap"});
            columns.Bound(c => c.ToBeCompletedBeforeTs).Filterable(f => f.UI(GridFilterUIRole.DateTimePicker)).Hidden(true).Format(VM_Resources.ResourceManager.GetString("GLOB_LongDateTime_FORMAT")).HtmlAttributes(new {@class = "nowrap"});
            columns.Bound(c => c.WorkOrderStartTs).Filterable(f => f.UI(GridFilterUIRole.DateTimePicker)).Hidden(true).Format(VM_Resources.ResourceManager.GetString("GLOB_LongDateTime_FORMAT")).HtmlAttributes(new {@class = "nowrap"});
            columns.Bound(c => c.WorkOrderEndTs).Filterable(f => f.UI(GridFilterUIRole.DateTimePicker)).Hidden(true).Format(VM_Resources.ResourceManager.GetString("GLOB_LongDateTime_FORMAT")).HtmlAttributes(new {@class = "nowrap"});
            columns.ForeignKey(o => o.EnumWorkOrderStatus, (SelectList) ViewBag.WorkOrderStatuses);
        })
       .ToolBar(toolbar => toolbar.ClientTemplateId("SearchGridToolbarTemplate"))
       .DataSource(d => d
           .Ajax()
           .ServerOperation(true)
           .PageSize(24)
           .Read(r => r.Action("GetWorkOrderOverviewList", "PerformanceWorkOrderMonitor"))
       )
       .Events(e => e.Change("onElementSelect"))
)

