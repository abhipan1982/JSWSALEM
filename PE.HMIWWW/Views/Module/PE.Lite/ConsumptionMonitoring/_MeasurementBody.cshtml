@model PE.HMIWWW.ViewModel.Module.Lite.ConsumptionMonitoring.VM_Feature

<div class="row h-100">
    <div class="col">
        <div class="" style="display: flex; flex-direction: row; justify-content: flex-end">
          <div class="k-form-error mr-2" id="date_error"></div>
          <div class="">
            <input id="datetimepickerFrom" title="datetimepickerFrom" />
          </div>
         <div class="mx-2">
            -
         </div>
          <div class="">
            <input id="datetimepickerTo" title="datetimepickerTo" />
          </div>
        </div>

        <div class="w-100" id="monitoring_chart" style="height: 700px">
        </div>

    </div>
</div>

<script>

let root = am5.Root.new("monitoring_chart");
let featureName = "@Model.FeatureName";
let featureId = @Model.FeatureId;
let initFrom = new Date();
initFrom.setMonth(initFrom.getMonth() - 1);

$("#datetimepickerFrom").kendoDateTimePicker({
      dateInput: true,
      change: onDateRangeChange,
      value: initFrom
});

$("#datetimepickerTo").kendoDateTimePicker({
      dateInput: true,
      change: onDateRangeChange,
      value: new Date()
});

initData();

function handleData(data) {
  const points = [];
  data.forEach((el) => {
    let date = new Date(el.MeasurementTime);
    am5.time.add(date, "millisecond", 1);
    points.push({
      date: date.getTime(),
      value: el.MeasurementValueAvg,
    });
  });
  series.data.setAll(points);
}

root.setThemes([
  am5themes_Animated.new(root)
]);

let chart = root.container.children.push(
  am5xy.XYChart.new(root, {
    panY: "none",
    wheelY: "zoomX",
    layout: root.verticalLayout
  })
);

let yAxis = chart.yAxes.push(
  am5xy.ValueAxis.new(root, {
    renderer: am5xy.AxisRendererY.new(root, {})
  })
);

let xAxis = chart.xAxes.push(
  am5xy.DateAxis.new(root, {
    groupData: true,
    baseInterval: { timeUnit: "millisecond", count: 1 },
    renderer: am5xy.AxisRendererX.new(root, {})
  })
);

xAxis.get("dateFormats")["millisecond"] = "yyyy-MM-dd";
xAxis.get("periodChangeDateFormats")["millisecond"] = "MMMM";

let series = chart.series.push(
  am5xy.LineSeries.new(root, {
    name: featureName,
    xAxis: xAxis,
    yAxis: yAxis,
    valueYField: "value",
    valueXField: "date",
    tooltip: am5.Tooltip.new(root, {})
  })
);

series.strokes.template.set("strokeWidth", 2);

series.bullets.push(function (root) {
  return am5.Bullet.new(root, {
    sprite: am5.Circle.new(root, {
      radius: 3,
      fill: series.get("fill")
    })
  });
});

series.get("tooltip").label.set("text", "[bold]{name}[/]\n{valueX.formatDate()}: {valueY}")

chart.set("cursor", am5xy.XYCursor.new(root, {
  behavior: "zoomXY",
  xAxis: xAxis
}));

xAxis.set("tooltip", am5.Tooltip.new(root, {
  themeTags: ["axis"]
}));

yAxis.set("tooltip", am5.Tooltip.new(root, {
  themeTags: ["axis"]
}));

chart.set("scrollbarX", am5.Scrollbar.new(root, {
  orientation: "horizontal",
}));

</script>
