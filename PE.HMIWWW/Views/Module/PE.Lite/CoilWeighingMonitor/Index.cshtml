@model PE.HMIWWW.ViewModel.Module.Lite.Material.VM_RawMaterialOverview
@{
  Layout = "~/Views/Shared/_LayoutWithoutWidgets.cshtml";
}

<div class="row container-fluid p-3 pt-4">

  <div class="col-8">

    @(
        Html.Kendo().Grid<PE.HMIWWW.ViewModel.Module.Lite.Material.VM_RawMaterialOverview>()
        .Name("WeighingOverveiwBeforeScale")
        .HtmlAttributes(new { style = @String.Format(" height:{0}px;", 130) })
        .Selectable()
        .Columns(c =>
        {
          c.Bound(x => x.RawMaterialId).Visible(false);
          c.Bound(x => x.DisplayedMaterialName)
          .ClientTemplate("<a class='link' href='javascript:_RawMaterial.GoToRawMaterial(#:RawMaterialId#);'>#:DisplayedMaterialName#</a>");
          c.Bound(x => x.WorkOrderName)
          .ClientTemplate("#if(WorkOrderId) {#<a class='link' href='javascript:_WorkOrder.GoToWorkOrder(#:WorkOrderId#);'>#:WorkOrderName#</a>#}#");
          c.Bound(x => x.HeatName)
          .ClientTemplate("#if(WorkOrderId) {#<a class='link' href='javascript:_Heat.GoToHeat(#= HeatId #);'>#:HeatName#</a>#}#");
          c.Bound(x => x.FKMaterialId)
          .Filterable(false)
          .ClientTemplate(Html.ImageButton("details", "_RawMaterial.GoToRawMaterial(#:RawMaterialId#)").ToString())
          .Width(30)
          .Title(" ");
        })
        .DataSource(ds => ds
        .Ajax()
        .ServerOperation(true)
        .PageSize(4)
        .Events(e => e.Error("TelerikErrorHandler"))
        .Read(r => r.Action("GetRawMaterialsBeforeWeightList", "CoilWeighingMonitor"))
        )
        .Events(e => e.Change("onSelect"))
        )
    <div class="text-center mb-4 mt-4">
      <i class="material-icons text-center" style="    color: #006487;">arrow_downward</i>
    </div>
    <div id="material-details-panel">
    </div>
    <div class="text-center mb-4 mt-4">
      <i class="material-icons text-center" style="    color: #006487">arrow_downward</i>
    </div>
    @(Html.Kendo().Grid<PE.HMIWWW.ViewModel.Module.Lite.Material.VM_RawMaterialOverview>()
        .Name("WeighingOverveiwAfterScale")
        .HtmlAttributes(new { style = @String.Format(" height:{0}px;", 130) })
        .Selectable()
        .Columns(c =>
        {
          c.Bound(x => x.RawMaterialId).Visible(false);
          c.Bound(x => x.DisplayedMaterialName)
          .ClientTemplate("<a class='link' href='javascript:_RawMaterial.GoToRawMaterial(#:RawMaterialId#);'>#:DisplayedMaterialName#</a>");
          c.Bound(x => x.WorkOrderName)
          .ClientTemplate("#if(WorkOrderId) {#<a class='link' href='javascript:_WorkOrder.GoToWorkOrder(#:WorkOrderId#);'>#:WorkOrderName#</a>#}#");
          c.Bound(x => x.HeatName)
          .ClientTemplate("#if(WorkOrderId) {#<a class='link' href='javascript:_Heat.GoToHeat(#= HeatId #);'>#:HeatName#</a>#}#");
          c.Bound(x => x.Weight).Width(20);
          c.Bound(x => x.FKMaterialId)
          .Filterable(false)
          .ClientTemplate(Html.ImageButton("details", "_RawMaterial.GoToRawMaterial(#:RawMaterialId#)").ToString())
          .Width(30)
          .Title(" ");
        })
        .DataSource(ds => ds
        .Ajax()
        .ServerOperation(true)
        .PageSize(4)
        .Events(e => e.Error("TelerikErrorHandler"))
        .Read(r => r.Action("GetRawMaterialsAfterWeightList", "CoilWeighingMonitor"))
        )
        .Events(e => e.Change("onSelect"))
        )

  </div>

  <div class="col-4" id="label_wrapper"></div>
</div>


<script src="~/bundles/js/Module/CoilWeighingMonitor.js" />

<style>
  .weight {
      border: 1px solid #dbdbdb;
      height: 120px;
  }

  .loading-overlay::before {
      content: "";
      display: block;
      height: 100%;
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      z-index: 11;
      background-image: url(/css/System/Img/loading_2x.gif);
      background-repeat: no-repeat;
      background-position: center;
      background-color: rgba(255,255,255,.6);
  }

</style>
