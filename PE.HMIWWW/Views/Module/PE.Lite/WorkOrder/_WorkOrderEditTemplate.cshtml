@model PE.HMIWWW.ViewModel.Module.Lite.WorkOrder.VM_WorkOrder 
        
<div class="row form-group">

    <div class="col-2 text-right">
        <label>
            @Html.LabelFor(x => x.WorkOrderName)
        </label>
    </div>
    <div class="col-2">
        @Html.Kendo().TextBoxFor(x => x.WorkOrderName).HtmlAttributes(new { @class = "form-control form-control-sm popup_input_standard" })
        @Html.ValidationMessageFor(x => x.WorkOrderName)
    </div>

    <div class="col text-right">
        <label>
            @Html.LabelFor(x => x.TargetOrderWeight)
        </label>
    </div>
    <div class="col">
        @Html.Kendo().NumericTextBoxFor(x => x.TargetOrderWeight).HtmlAttributes(new { @class = "form-control form-control-sm", @style = "width: 150px" })
        @Html.ValidationMessageFor(x => x.TargetOrderWeight)
    </div>
</div>

<div class="row form-group">
    <div class="col-2 text-right">
        <label>@Html.LabelFor(x => x.WorkOrderStatus)</label>
    </div>

    <div class="col-2">
        @(Html.Kendo().DropDownListFor(x => x.WorkOrderStatus).BindTo((SelectList)ViewBag.WorkOrderStatuses).HtmlAttributes(new { @class = "form-control form-control-sm popup_input_standard" }))
        @Html.ValidationMessageFor(m => m.WorkOrderStatus)
    </div>

    <div class="col text-right">
        <label>@Html.LabelFor(x => x.ToBeCompletedBefore)</label>
    </div>
    <div class="col">
        @Html.Kendo().DatePickerFor(m => m.ToBeCompletedBefore).HtmlAttributes(new { @class = "form-control form-control-sm popup_input_standard" })
        @Html.ValidationMessageFor(m => m.ToBeCompletedBefore)
    </div>
</div>

<div class="row form-group">
    <div class="col-2 text-right">
        <label>@Html.LabelFor(x => x.IsTestOrder)</label>
    </div>
    <div class="col-2 mt-1">
        @Html.Kendo().CheckBoxFor(x => x.IsTestOrder).HtmlAttributes(new { @class = "form-control" }).Label(String.Empty)
    </div>


    <div class="col text-right">
        <label>@Html.LabelFor(x => x.FKCustomerId)</label>
    </div>
    <div class="col">
        @(Html.Kendo().DropDownListFor(x => x.FKCustomerId)
            .Name("FKCustomerId")
            .DataTextField("Text")
            .DataValueField("Value")
            .HtmlAttributes(new { @class = "form-control form-control-sm popup_input_standard" })
            .BindTo(new SelectList(@ViewBag.CustomerList, "CustomerId", "CustomerName"))
            .OptionLabel("-")
        )
        @Html.ValidationMessageFor(x => x.FKCustomerId)
    </div>
</div>

<hr>

<div class="row form-group">
    <div class="col-2 text-right">
        <label>@Html.LabelFor(x => x.FKProductCatalogueId)</label>
    </div>

    <div class="col-2">
        @(Html.Kendo().DropDownListFor(x => x.FKProductCatalogueId)
          .Name("FKProductCatalogueId")
          .DataTextField("Text")
          .DataValueField("Value")
          .HtmlAttributes(new { @class = "form-control form-control-sm popup_input_standard" })
          .BindTo(new SelectList(@ViewBag.ProductList, "ProductCatalogueId", "ProductCatalogueName", Model?.FKProductCatalogueId))
          .OptionLabel("-")
          .Events(x => x.Change("ShowProductCatalogueDetailsAfterSelect"))
        )
    </div>

    <div style="display: none;" class="product-details row col form-group">
        <div class="col-2 text-right"><label>@VM_Resources.NAME_Thickness</label></div><div class="col-1" id="Thickness"></div>
        <div class="col-2 text-right"><label>@VM_Resources.NAME_Width</label></div><div class="col-1" id="Width"></div>
        <div class="col-2 text-right"><label>@Html.LabelFor(x => x.TargetOrderWeight)</label></div><div class="col-1" id="Weight"></div>
        <div class="col-2 text-right"><label>@VM_Resources.NAME_Shape</label></div><div class="col-1" id="Shape"></div>
    </div>
</div>

<div class="row form-group">
    <div class="col-2 text-right">
        <label>@Html.LabelFor(x => x.Layout)</label>
    </div>
    <div class="col-2 mt-1">

        @(Html.Kendo().DropDownListFor(x => x.Layout)
          .Name("Layout")
          .HtmlAttributes(new { @class = "form-control form-control-sm popup_input_standard" })
          .BindTo(new SelectList(@ViewBag.LayoutList, Model?.Layout))
          .OptionLabel("-")
        )

        @Html.ValidationMessageFor(x => x.Layout)
    </div>
</div>

<hr>

<div class="row form-group">
    <div class="col-2 text-right">
        <label>@Html.LabelFor(x => x.FKMaterialCatalogueId)</label>
    </div>

    <div class="col-2">
        @(Html.Kendo().DropDownListFor(x => x.FKMaterialCatalogueId)
                  .Name("FKMaterialCatalogueId")
                  .DataTextField("Text")
                  .DataValueField("Value")
                  .HtmlAttributes(new { @class = "form-control form-control-sm popup_input_standard" })
                  .BindTo(new SelectList(@ViewBag.MaterialList, "MaterialCatalogueId", "MaterialCatalogueName", Model?.FKMaterialCatalogueId))
                  .OptionLabel("-")
                  .Events(x => x.Change("GetMaterialsWeight"))
                )
    </div>
    <div class="col-2 text-right ">
        <label>@Html.LabelFor(x => x.FKHeatId)</label>
    </div>
    <div class="col-2">
        @Html.HiddenFor(x => x.FKHeatId)
        @(Html.Kendo().AutoComplete()
            .HtmlAttributes(new { @style = "width: 400px;" })
            .Name("Heat")
            .Filter("contains")
            .DataTextField("HeatName")
            .Value(Model?.FKHeatIdRef)
            .Placeholder(@VM_Resources.GLOB_StartTyping)
            .DataSource(source =>
            {
                source.Read(read =>
                {
                    read.Action("ServerFiltering_GetHeats", "Heat")
                        .Data("onAdditionalData");
                })
                .ServerFiltering(true);
            })
            .Events(events => events.Select("HeatSelected"))
            .Template("<div class='heat'>" +
                        "<p class='details-row heat-name'><span class='col-10 nowrap'>#: data.HeatName #</span></p>" +
                        "<p class='details-row heat-details'><span class='col-4'>" + @VM_Resources.NAME_Steelgrade + ":</span> <span class='col-6 heat-data'> #: data.SteelgradeName # </span> </p>" +

                        "</div>")
            )
        @Html.ValidationMessageFor(x => x.FKHeatId)
    </div>

    <div class="col-2 text-right ">
        <label>@Html.LabelFor(x => x.FKSteelgradeId)</label>
    </div>
    <div class="col-2">
        @(Html.Kendo().DropDownListFor(x => x.FKSteelgradeId)
                       .HtmlAttributes(new { @style = "width: 150px;" })
                       .Name("FKSteelgradeId")
                       .OptionLabel("-")
                       .DataTextField("SteelgradeName")
                       .DataValueField("Id")
                       .DataSource(source => {
                           source.Read(read =>
                           {
                               read.Action("ServerFiltering_GetSteelgrades", "Steelgrade")
                                   .Data("filterSteelgrades");
                           })
                           .ServerFiltering(true);
                       })
                 )
        @Html.ValidationMessageFor(x => x.FKSteelgradeId)
    </div>
</div>

<div class="row form-group">
    <div class="col-2 text-right">
        @Html.LabelFor(x => x.BilletWeight)
    </div>
    <div class="col-2">
        @Html.Kendo().NumericTextBoxFor(x => x.BilletWeight).HtmlAttributes(new { @class = "form-control form-control-sm", @style = "width: 150px" }).Min(0.01).Events(x => x.Change("CalculateMaterialsWeight"))
        @Html.ValidationMessageFor(x => x.BilletWeight)
    </div>

    <div class="col-2 text-right">
        @Html.LabelFor(x => x.MaterialsNumber)
    </div>
    <div class="col-2">
        @Html.Kendo().NumericTextBoxFor(x => x.MaterialsNumber).HtmlAttributes(new { @class = "form-control form-control-sm", @style = "width: 150px" }).Min(1).Max(1000).Decimals(0).Format("0").Events(x => x.Change("CalculateMaterialsWeight"))
        @Html.ValidationMessageFor(x => x.MaterialsNumber)
    </div>

    <div class="col-2 text-right material-weight">@Html.LabelFor(x => x.TargetOrderWeight)</div>
    <div class="col-2 material-weight"><div class="col-2" id="material-weight-value"></div></div>
</div>

<hr>
<div class="row form-group">
    <div class="col text-right">
        @Html.LabelFor(x => x.OperationNumber)
    </div>
    <div class="col">
        @Html.Kendo().NumericTextBoxFor(x => x.OperationNumber).HtmlAttributes(new { @class = "form-control form-control-sm" }).Min(1).Max(Int16.MaxValue).Decimals(0).Format("0")
        @Html.ValidationMessageFor(x => x.OperationNumber)
    </div>

    <div class="col text-right">
        @Html.LabelFor(x => x.NextOperation)
    </div>
    <div class="col">
        @Html.Kendo().TextBoxFor(x => x.NextOperation).HtmlAttributes(new { @class = "form-control form-control-sm" })
        @Html.ValidationMessageFor(x => x.NextOperation)
    </div>

    <div class="col text-right">
        @Html.LabelFor(x => x.StorageIdentification)
    </div>
    <div class="col">
        @Html.Kendo().TextBoxFor(x => x.StorageIdentification).HtmlAttributes(new { @class = "form-control form-control-sm" })
        @Html.ValidationMessageFor(x => x.StorageIdentification)
    </div>
</div>

<div class="row form-group">
    <div class="col text-right">
        @Html.LabelFor(x => x.CommercialApplicationCode)
    </div>
    <div class="col">
        @Html.Kendo().TextBoxFor(x => x.CommercialApplicationCode).HtmlAttributes(new { @class = "form-control form-control-sm" })
        @Html.ValidationMessageFor(x => x.CommercialApplicationCode)
    </div>

    <div class="col text-right">
        @Html.LabelFor(x => x.PreviousWorkOrderName)
    </div>
    <div class="col">
        @Html.Kendo().TextBoxFor(x => x.PreviousWorkOrderName).HtmlAttributes(new { @class = "form-control form-control-sm" })
        @Html.ValidationMessageFor(x => x.PreviousWorkOrderName)
    </div>

    <div class="col text-right">
        @Html.LabelFor(x => x.TextDesc01)
    </div>
    <div class="col">
        @Html.Kendo().TextBoxFor(x => x.TextDesc01).HtmlAttributes(new { @class = "form-control form-control-sm" })
        @Html.ValidationMessageFor(x => x.TextDesc01)
    </div>
</div>

<div class="row form-group">
    <div class="col text-right">
        @Html.LabelFor(x => x.TextDesc02)
    </div>
    <div class="col">
        @Html.Kendo().TextBoxFor(x => x.TextDesc02).HtmlAttributes(new { @class = "form-control form-control-sm" })
        @Html.ValidationMessageFor(x => x.TextDesc02)
    </div>

    <div class="col text-right">
        @Html.LabelFor(x => x.TextDesc03)
    </div>
    <div class="col">
        @Html.Kendo().TextBoxFor(x => x.TextDesc03).HtmlAttributes(new { @class = "form-control form-control-sm" })
        @Html.ValidationMessageFor(x => x.TextDesc03)
    </div>

    <div class="col text-right">
        @Html.LabelFor(x => x.TextDesc04)
    </div>
    <div class="col">
        @Html.Kendo().TextBoxFor(x => x.TextDesc04).HtmlAttributes(new { @class = "form-control form-control-sm" })
        @Html.ValidationMessageFor(x => x.TextDesc04)
    </div>
</div>

<div class="row form-group">
    <div class="col text-right">
        @Html.LabelFor(x => x.TextDesc05)
    </div>
    <div class="col">
        @Html.Kendo().TextBoxFor(x => x.TextDesc05).HtmlAttributes(new { @class = "form-control form-control-sm" })
        @Html.ValidationMessageFor(x => x.TextDesc05)
    </div>

    <div class="col text-right">
        @Html.LabelFor(x => x.TextDesc06)
    </div>
    <div class="col">
        @Html.Kendo().TextBoxFor(x => x.TextDesc06).HtmlAttributes(new { @class = "form-control form-control-sm" })
        @Html.ValidationMessageFor(x => x.TextDesc06)
    </div>

    <div class="col text-right">
        @Html.LabelFor(x => x.TextDesc07)
    </div>
    <div class="col">
        @Html.Kendo().TextBoxFor(x => x.TextDesc07).HtmlAttributes(new { @class = "form-control form-control-sm" })
        @Html.ValidationMessageFor(x => x.TextDesc07)
    </div>
</div>

<div class="row form-group">
    <div class="col text-right">
        @Html.LabelFor(x => x.TextDesc08)
    </div>
    <div class="col">
        @Html.Kendo().TextBoxFor(x => x.TextDesc08).HtmlAttributes(new { @class = "form-control form-control-sm" })
        @Html.ValidationMessageFor(x => x.TextDesc08)
    </div>

    <div class="col text-right">
        @Html.LabelFor(x => x.TextDesc09)
    </div>
    <div class="col">
        @Html.Kendo().TextBoxFor(x => x.TextDesc09).HtmlAttributes(new { @class = "form-control form-control-sm" })
        @Html.ValidationMessageFor(x => x.TextDesc09)
    </div>

    <div class="col text-right">
        @Html.LabelFor(x => x.TextDesc10)
    </div>
    <div class="col">
        @Html.Kendo().TextBoxFor(x => x.TextDesc10).HtmlAttributes(new { @class = "form-control form-control-sm" })
        @Html.ValidationMessageFor(x => x.TextDesc10)
    </div>
</div>

<div class="row form-group">
    <div class="col text-right">
        @Html.LabelFor(x => x.TextDesc11)
    </div>
    <div class="col">
        @Html.Kendo().TextBoxFor(x => x.TextDesc11).HtmlAttributes(new { @class = "form-control form-control-sm" })
        @Html.ValidationMessageFor(x => x.TextDesc11)
    </div>

    <div class="col text-right">
        @Html.LabelFor(x => x.TextDesc12)
    </div>
    <div class="col">
        @Html.Kendo().TextBoxFor(x => x.TextDesc12).HtmlAttributes(new { @class = "form-control form-control-sm" })
        @Html.ValidationMessageFor(x => x.TextDesc12)
    </div>

    <div class="col text-right">
        @Html.LabelFor(x => x.TextDesc13)
    </div>
    <div class="col">
        @Html.Kendo().TextBoxFor(x => x.TextDesc13).HtmlAttributes(new { @class = "form-control form-control-sm" })
        @Html.ValidationMessageFor(x => x.TextDesc13)
    </div>
</div>