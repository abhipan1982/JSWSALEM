@model PE.HMIWWW.ViewModel.Module.Lite.Product.VM_ProductCatalogue
@{
    /**/

    /**/

    ViewBag.Title = VM_Resources.PAGE_TITLE_ProductCatalogue_CreateProductCatalogueDialog;
    Layout = "~/Views/Shared/_PopupLayout.cshtml";
}

<style>

    .container {
        padding: 0;
    }

    .form-group label {
        color: #00587c;
        font-size: 14px;
        margin-top: 2px;
    }
</style>

<form asp-controller="ProductCatalogue" asp-action="CreateProductCatalogue" data-ajax="true" data-ajax-method="POST"
      data-ajax-begin="OnFormBegin" data-ajax-success="OnFormSuccess" data-ajax-failure="OnFormError"
      class="container-fluid" target="formContainer" role="form" id="form">

@Html.AntiForgeryToken()
@Html.HiddenFor(x => x.Id)
<div style="height:auto;overflow-x:hidden">

<div class="row form-group">
    <div class="col text-right">
        <label>@Html.LabelFor(x => x.ProductCatalogueName)</label>
    </div>
    <div class="col">
        @Html.Kendo().TextBoxFor(x => x.ProductCatalogueName).HtmlAttributes(new {@class = "form-control form-control-sm popup_input_standard"})
        @Html.ValidationMessageFor(x => x.ProductCatalogueName)
    </div>
    
    <div class="col text-right">
        <label>@Html.LabelFor(x => x.ProductExternalCatalogueName)</label>
    </div>
    <div class="col">
        @Html.Kendo().TextBoxFor(x => x.ProductExternalCatalogueName).HtmlAttributes(new {@class = "form-control form-control-sm popup_input_standard"})
        @Html.ValidationMessageFor(x => x.ProductExternalCatalogueName)
    </div>

    <div class="col text-right">
        <label>@Html.LabelFor(x => x.ProductCatalogueDescription)</label>
    </div>
    <div class="col">
        @Html.Kendo().TextBoxFor(x => x.ProductCatalogueDescription).HtmlAttributes(new {@class = "form-control form-control-sm", style = "width: 150px"})
        @Html.ValidationMessageFor(x => x.ProductCatalogueDescription)
    </div>

</div>

<div class="row form-group">

    <div class="col text-right">
        <label>@Html.LabelFor(x => x.Type)</label>
    </div>
    <div class="col">
        @(Html.Kendo().DropDownListFor(x => x.TypeId)
            .DataTextField("Text")
            .DataValueField("Value")
            .HtmlAttributes(new {@class = "form-control form-control-sm popup_input_standard"})
            .BindTo(new SelectList(ViewBag.TypeList, "Id", "Name"))
            .OptionLabel("-")
            )
        @*@Html.Kendo().TextBoxFor(x => x.Type).HtmlAttributes(new { @class = "form-control form-control-sm" })*@
    </div>

    <div class="col text-right">
        <label>@Html.LabelFor(x => x.Shape)</label>
    </div>
    <div class="col">
        @(Html.Kendo().DropDownListFor(x => x.ShapeId)
            .DataTextField("Text")
            .DataValueField("Value")
            .HtmlAttributes(new {@class = "form-control form-control-sm popup_input_standard"})
            .BindTo(new SelectList(ViewBag.ShapeList, "Id", "Name"))
            .OptionLabel("-")
            )
    </div>

    <div class="col text-right">
    </div>
    <div class="col">
    </div>


</div>


<div class="row form-group">

    <div class="col text-right">
        <label>@Html.LabelFor(x => x.Length)</label>
    </div>
    <div class="col">
        @Html.PeKendo().NumericTextBoxFor(x => x.Length).HtmlAttributes(new {@class = "form-control form-control-sm", style = "width: 150px"})
        @Html.ValidationMessageFor(x => x.Length)
    </div>

    <div class="col text-right">
        <label>@Html.LabelFor(x => x.LengthMin)</label>
    </div>
    <div class="col">
        @Html.PeKendo().NumericTextBoxFor(x => x.LengthMin).HtmlAttributes(new {@class = "form-control form-control-sm", style = "width: 150px"})
        @Html.ValidationMessageFor(x => x.LengthMin)
    </div>

    <div class="col text-right">
        <label>@Html.LabelFor(x => x.LengthMax)</label>
    </div>
    <div class="col">

        @Html.PeKendo().NumericTextBoxFor(x => x.LengthMax).HtmlAttributes(new {@class = "form-control form-control-sm", style = "width: 150px"})
        @Html.ValidationMessageFor(x => x.LengthMax)
    </div>


</div>

<div class="row form-group">

    <div class="col text-right">
        <label>@Html.LabelFor(x => x.Width)</label>
    </div>
    <div class="col">
        @Html.PeKendo().NumericTextBoxFor(x => x.Width).HtmlAttributes(new {@class = "form-control form-control-sm", style = "width: 150px"})
        @Html.ValidationMessageFor(x => x.Width)
    </div>

    <div class="col text-right">
        <label>@Html.LabelFor(x => x.WidthMin)</label>
    </div>
    <div class="col">
        @Html.PeKendo().NumericTextBoxFor(x => x.WidthMin).HtmlAttributes(new {@class = "form-control form-control-sm", style = "width: 150px"})
        @Html.ValidationMessageFor(x => x.WidthMin)
    </div>

    <div class="col text-right">
        <label>@Html.LabelFor(x => x.WidthMax)</label>
    </div>
    <div class="col">
        @Html.PeKendo().NumericTextBoxFor(x => x.WidthMax).HtmlAttributes(new {@class = "form-control form-control-sm", style = "width: 150px"})
        @Html.ValidationMessageFor(x => x.WidthMax)
    </div>


</div>


<div class="row form-group">

    <div class="col text-right">
        <label>@Html.LabelFor(x => x.Thickness)</label>
    </div>
    <div class="col">
        @Html.PeKendo().NumericTextBoxFor(x => x.Thickness).HtmlAttributes(new {@class = "form-control form-control-sm", style = "width: 150px"})
        @Html.ValidationMessageFor(x => x.Thickness)
    </div>

    <div class="col text-right">
        <label>@Html.LabelFor(x => x.ThicknessMin)</label>
    </div>
    <div class="col">
        @Html.PeKendo().NumericTextBoxFor(x => x.ThicknessMin).HtmlAttributes(new {@class = "form-control form-control-sm", style = "width: 150px"})
        @Html.ValidationMessageFor(x => x.ThicknessMin)
    </div>

    <div class="col text-right">
        <label>@Html.LabelFor(x => x.ThicknessMax)</label>
    </div>
    <div class="col">
        @Html.PeKendo().NumericTextBoxFor(x => x.ThicknessMax).HtmlAttributes(new {@class = "form-control form-control-sm", style = "width: 150px"})
        @Html.ValidationMessageFor(x => x.ThicknessMax)
    </div>


</div>
<div class="row form-group">

    <div class="col text-right">
        <label>@Html.LabelFor(x => x.Weight)</label>
    </div>
    <div class="col">
        @Html.PeKendo().NumericTextBoxFor(x => x.Weight).HtmlAttributes(new {@class = "form-control form-control-sm", style = "width: 150px"})
        @Html.ValidationMessageFor(x => x.Weight)
    </div>

    <div class="col text-right">
        <label>@Html.LabelFor(x => x.WeightMin)</label>
    </div>
    <div class="col">
        @Html.PeKendo().NumericTextBoxFor(x => x.WeightMin).HtmlAttributes(new {@class = "form-control form-control-sm", style = "width: 150px"})
        @Html.ValidationMessageFor(x => x.WeightMin)
    </div>

    <div class="col text-right">
        <label>@Html.LabelFor(x => x.WeightMax)</label>
    </div>
    <div class="col">
        @Html.PeKendo().NumericTextBoxFor(x => x.WeightMax).HtmlAttributes(new {@class = "form-control form-control-sm", style = "width: 150px"})
        @Html.ValidationMessageFor(x => x.WeightMax)
    </div>


</div>

<div class="row form-group">

    <div class="col text-right">
        <label>@Html.LabelFor(x => x.OvalityMax)</label>
    </div>
    <div class="col">
        @Html.PeKendo().NumericTextBoxFor(x => x.OvalityMax).HtmlAttributes(new {@class = "form-control form-control-sm", style = "width: 150px"})
        @Html.ValidationMessageFor(x => x.OvalityMax)
    </div>

    <div class="col text-right">
        <label>@Html.LabelFor(x => x.StdProductivity)</label>
    </div>
    <div class="col">
        @Html.PeKendo().NumericTextBoxFor(x => x.StdProductivity).HtmlAttributes(new {@class = "form-control form-control-sm", style = "width: 150px"})
        @Html.ValidationMessageFor(x => x.StdProductivity)
    </div>

    <div class="col text-right">
        <label>@Html.LabelFor(x => x.StdMetallicYield)</label>
    </div>
    <div class="col">
        @Html.PeKendo().NumericTextBoxFor(x => x.StdMetallicYield).HtmlAttributes(new {@class = "form-control form-control-sm", style = "width: 150px"})
        @Html.ValidationMessageFor(x => x.StdMetallicYield)
    </div>

</div>


</div>

<hr/>

<div class="row form-group">
    <div class="col invalid">
        <p id="error">
            <span class="k-icon k-i-close-circle error-icon"></span> @VM_Resources.GLOB_Error
        </p>
    </div>
    <div class="col text-right">
        <button class="btn btn-primary popup_button" onclick="displayMessage()" type="submit">
            @VM_Resources.GLOB_Form_Button_Save
        </button>
    </div>
</div>
</form>

<script>

    $(function () {

        $('#error').css("display", "none");
        $("#form").kendoValidator().data("kendoValidator");

    });

    function displayMessage() {

        var validator = $("#form").kendoValidator().data("kendoValidator");

        if (validator.validate()) {
            $('#error').css("display", "none");
        } else {
            $('#error').css("display", "block");
            $('#popup-footer')
                .css('display', 'block')
                .css('background-color', 'rgb(206, 0, 55)');
        }
    }


</script>
