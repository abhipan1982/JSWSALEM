@using PE.HMIWWW.ViewModel.Module.Lite.Material
@model PE.HMIWWW.ViewModel.Module.Lite.Material.VM_MaterialOverview
@(
        Html.Kendo().Grid<VM_MaterialOverview>()
            .Name("SearchGrid")
            .Events(e => e.DataBound("colorEmptyL3MaterialAndSelectRow"))
            .NoRecords(x => x.Template(VM_Resources.GLOB_GRID_NO_DATA))
            .Pageable(p => p
                .Refresh(true)
                .Messages(m => m.Display(VM_Resources.GLOB_pagination))
                .PageSizes(true))
            .Sortable()
            .Filterable()
            .Selectable()
            .HtmlAttributes(new {style = string.Format("height:{0}px;", ViewBag.FullGridHeight)})
            .Columns(columns =>
            {
                columns.Bound(c => c.MaterialId).Visible(false);
                columns.Bound(c => c.MaterialName);
                columns.Bound(c => c.HeatName).HtmlAttributes(new {@class = "nowrap"});
                columns.Bound(c => c.MaterialIsAssigned).Hidden(true);
                columns.Bound(c => c.MaterialCatalogueName).Hidden(true).HtmlAttributes(new {@class = "nowrap"});
                columns.Bound(c => c.WorkOrderName).Hidden(true).HtmlAttributes(new {@class = "nowrap"});
                columns.Bound(c => c.MaterialCreatedTs).Filterable(f => f.UI(GridFilterUIRole.DateTimePicker)).Format(VM_Resources.ResourceManager.GetString("GLOB_LongDateTime_FORMAT")).Hidden(true).HtmlAttributes(new {@class = "nowrap"});
                columns.Bound(c => c.MaterialStartTs).Filterable(f => f.UI(GridFilterUIRole.DateTimePicker)).Format(VM_Resources.ResourceManager.GetString("GLOB_LongDateTime_FORMAT")).Hidden(true).HtmlAttributes(new {@class = "nowrap"});
                columns.Bound(c => c.MaterialEndTs).Filterable(f => f.UI(GridFilterUIRole.DateTimePicker)).Format(VM_Resources.ResourceManager.GetString("GLOB_LongDateTime_FORMAT")).Hidden(true).HtmlAttributes(new {@class = "nowrap"});
            })
            .ToolBar(toolbar => { toolbar.ClientTemplateId("SearchGridToolbarTemplate"); })
            .DataSource(d => d
                .Ajax()
                .ServerOperation(true)
                .PageSize(26)
                .Filter(filters =>
                {
                    if (Model != null)
                    {
                        filters.Add(f => f.MaterialName).IsEqualTo(Model.MaterialName);
                    }
                })
                .Sort(sort => { sort.Add(s => s.MaterialId).Descending(); })
                .Read(r => r.Action("GetMaterialSearchList", "Material", new {metarialId = Model}))
                .Events(e => e.Change("dataSourceChange"))
            )
            .Events(e => e.Change("onElementSelect"))
    )
