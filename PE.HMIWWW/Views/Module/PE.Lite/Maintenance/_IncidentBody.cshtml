@model PE.HMIWWW.ViewModel.Module.Lite.Maintenance.VM_DeviceIncident

<div class="row h-25 p-0 pt-3">
    <div class="col-6 p-0">
        <div class="container-fluid">
            <div class="form-group row">
                <div class="col-4 text-right">
                    @Html.LabelFor(m => m.IncidentName)
                </div>
                <div class="col">
                    @Html.DisplayFor(m => m.IncidentName)
                </div>
            </div>
            <div class="form-group row">
                <div class="col-4 text-right">
                    @Html.LabelFor(m => m.IncidentCode)
                </div>
                <div class="col">
                    @Html.DisplayFor(m => m.IncidentCode)
                </div>
            </div>
            <div class="form-group row">
                <div class="col-4 text-right">
                    @Html.LabelFor(m => m.IncidentTypeDescription)
                </div>
                <div class="col">
                    @Html.DisplayFor(m => m.IncidentTypeDescription)
                </div>
            </div>
        </div>
    </div>
    <div class="col-6 p-0">
        <div class="container-fluid">
            <div class="form-group row">
                <div class="col-4 text-right">
                    @Html.LabelFor(m => m.StartTime)
                </div>
                <div class="col">
                    @Html.DisplayFor(m => m.StartTime)
                </div>
            </div>
            <div class="form-group row">
                <div class="col-4 text-right">
                    @Html.LabelFor(m => m.EndTime)
                </div>
                <div class="col">
                    @Html.DisplayFor(m => m.EndTime)
                </div>
            </div>
            <div class="form-group row">
                <div class="col-4 text-right">
                    @Html.LabelFor(m => m.IsPlanned)
                </div>
                <div class="col">
                    @Html.Raw(((SelectList)ViewBag.NoYes).Where(p => p.Value == ((int)Model.IsPlanned).ToString()).First().Text)
                </div>
            </div>
        </div>
    </div>
</div>
@(Html.Kendo().Grid<PE.HMIWWW.ViewModel.Module.Lite.Maintenance.VM_Action>()
                    .Name("ActionsGrid")
                    .NoRecords(VM_Resources.GLOB_GRID_NO_DATA)
                    .Sortable()
                    .Filterable()
                    .ToolBar(toolbar =>
            {
            toolbar.Template(
                  @<text>
                    <div class="refreshBtnContainer">
                      @Html.ImageButton("add", "AddNewAction(" + Model.IncidentId + ")", false)
                    </div>
                  </text>);
            })
                    .Scrollable()
                    .Pageable(p => p
                    .Messages(m => m.Display(VM_Resources.GLOB_pagination)))
                    .HtmlAttributes(new { style = "height: 500px; width:1340px" })
                    .Columns(c =>
                    {
                        c.Bound(x => x.ActionId).Visible(false);
                        c.ForeignKey(p => p.FkActionTypeId, (SelectList)ViewBag.ActionTypesList);
                        c.Bound(x => x.CreatedTs).Format(VM_Resources.GLOB_LongDateTime_FORMAT);
                        c.Bound(x => x.LastUpdateTs).Format(VM_Resources.GLOB_LongDateTime_FORMAT);
                        c.Bound(x => x.ActionDescription);
                        c.Bound(p => p.ActionId).Sortable(false).Groupable(false).Filterable(false).Title("").Width(90)

                                     .ClientTemplate(@Html.ImageButton("new", "AddNewAction(#:ActionId#)").ToString() + @Html.ImageButton("edit", "ModifyAction(#:ActionId#)").ToString()
                                     + @Html.ImageButton("delete", "DeleteAction(#:ActionId#)").ToString());

                    })
                    .DataSource(d => d
                        .Ajax()
                        .ServerOperation(false)
                        .PageSize(24)
                        .Sort(x => x.Add("CreatedTs").Descending())
                        .Read(r => r.Action("GetAllActionsForIncidentList", "Maintenance", new { incidentId = Model.IncidentId }))
                        ))
