@using PE.HMIWWW.ViewModel.Module.Lite.Products

@(
  Html.Kendo().Grid<VM_ProductsList>()
    .Name("SearchGrid")
    //.Events(e => e.DataBound("selectRow"))
    .NoRecords(x => x.Template(VM_Resources.GLOB_GRID_NO_DATA))
    .Pageable(p => p
      .Refresh(true)
      .Messages(m => m.Display(VM_Resources.GLOB_pagination))
      .PageSizes(true))
    .Sortable()
    .Filterable()
    .Selectable()
    .HtmlAttributes(new { style = string.Format("height:{0}px;", ViewBag.FullGridHeight) })
    .Columns(columns =>
    {
      columns.Bound(c => c.ProductId).Visible(false);
      columns.Bound(c => c.ProductName).HtmlAttributes(new { @class = "nowrap" });
      columns.Bound(c => c.WorkOrderName).HtmlAttributes(new { @class = "nowrap" });
      columns.Bound(c => c.ProductCatalogueName).Hidden(true).HtmlAttributes(new { @class = "nowrap" });
      columns.Bound(c => c.SteelgradeCode).Hidden(true).HtmlAttributes(new { @class = "nowrap" });
      columns.Bound(c => c.SteelgradeName).Hidden(true).HtmlAttributes(new { @class = "nowrap" });
      columns.Bound(c => c.HeatName).Hidden(true).HtmlAttributes(new { @class = "nowrap" });
      columns.Bound(c => c.ProductRollingDate).Filterable(f => f.UI(GridFilterUIRole.DateTimePicker)).Hidden(true).Format(VM_Resources.ResourceManager.GetString("GLOB_LongDateTime_FORMAT")).HtmlAttributes(new {@class = "nowrap"});
      columns.Bound(c => c.CreatedTs).Filterable(f => f.UI(GridFilterUIRole.DateTimePicker)).Hidden(true).Format(VM_Resources.ResourceManager.GetString("GLOB_LongDateTime_FORMAT")).HtmlAttributes(new {@class = "nowrap"});
      columns.Bound(c => c.DefectsNumber).Hidden(true).ClientTemplate(
        "<img src='" + "#=HasDefectImageSRC#".BuildImageSrc() + "' /> #=HasDefectsText#").Width(40).Filterable(false);
      columns.ForeignKey(o => o.EnumInspectionResult, (SelectList)ViewBag.ProductQualities).Hidden(true).ClientTemplate(
        "<img src='" + "#=InspectionResultImageSRC#".BuildImageSrc() + "' /> #=InspectionResultText#").Width(95);
    })
    .ToolBar(toolbar => toolbar.ClientTemplateId("SearchGridToolbarTemplate"))
    .DataSource(d => d
    .Ajax()
    .ServerOperation(true)
    .PageSize(26)
    .Sort(sort => sort.Add(s => s.ProductId).Descending())
    .Filter(filters =>
    {
      if (Model != null)
      {
        //filters.Add(f => f.MaterialName).IsEqualTo(Model.MaterialName);
      }
    })
    .Read(r => r.Action("GetProductsList", "Products", new { productId = Model }))
  )
  .Events(e =>
  {
    e.Change("dataSourceChange");
    e.Change("onElementSelect");
  })
)
