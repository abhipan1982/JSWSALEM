@using PE.HMIWWW.ViewModel.Module.Lite.Material
@model PE.HMIWWW.ViewModel.Module.Lite.Material.VM_L3MaterialData
@{
    Layout = "~/Views/Shared/_TabLayout.cshtml";
}

<style>
    .link {
        cursor: pointer;
        border-bottom: 1px solid #8da4b5;
    }

        .link:hover {
            opacity: 0.8;
        }
</style>

@section TabIncludes
{
  @if (Model.MaterialId != null)
  {
    @Html.ImageButton("unassign_billets", "_RawMaterial_Assignment.UnassignRawMaterial(" + Model.RawMaterialId + ", () => { try { afterMaterialAssignment(); } catch(e){} })")
  }
  else
  {
<div>@VM_Resources.INFO_SelectMaterialFromBelowInfo</div>
  }
}

@if (Model.MaterialId != null)
{
    <div id="material-partial" style="width: 100%"></div>
}
else
{
    <div class="row h-100">
        <div class="col">
            @(
        Html.Kendo().Grid<VM_MaterialOverview>()
        .Name("L3MaterialsSearchList" + Model.RawMaterialId)
        .NoRecords(x => x.Template(VM_Resources.GLOB_GRID_NO_DATA))
        .Pageable(p => p
        .Refresh(true)
        .Messages(m => m.Display(VM_Resources.GLOB_pagination))
        .PageSizes(true))
        .Sortable()
        .Filterable()
        .Selectable()
        .HtmlAttributes(new {style = string.Format("width:100%; height:600px;"), @class = string.Format("mt-2")})
        .Columns(columns =>
        {
          columns.Bound(c => c.MaterialId).Visible(false);
          columns.Bound(c => c.MaterialName);
          columns.Bound(c => c.HeatName).HtmlAttributes(new { @class = "nowrap" });
          columns.Bound(c => c.MaterialCatalogueName).HtmlAttributes(new { @class = "nowrap" });
          columns.Bound(c => c.WorkOrderName).HtmlAttributes(new { @class = "nowrap" });
        })
        .DataSource(d => d
          .Ajax()
          .ServerOperation(true)
          .PageSize(22)
          .Read(r => r.Action("GetNotAssignedMaterials", "Material"))
        )
        .Events(e =>
        {
          e.Change("(e) => { _RawMaterial_Assignment.AssignRawMaterial(e, " + Model.RawMaterialId + ", () => { try { afterMaterialAssignment(); } catch(e){} })} ");
        })
        )
        </div>
    </div>
}

<script>
    $(document).ready(function () {
      renderMaterialPartial();
    });

    function renderMaterialPartial() {
      if ($('#material-partial').length) {
        const model = JSON.parse('@Html.Raw(Json.Serialize(Model))');
        let dataToSend = {
          materialId: model.MaterialId
        };
        let url = "/Material/GetMaterialDetails";
        AjaxReqestHelperSilentWithoutDataType(url, dataToSend, setMaterialPartialView);
      }
    }

    function setMaterialPartialView(partialView) {
      $('#material-partial').html(partialView);
    }
</script>
