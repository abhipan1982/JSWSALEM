@model PE.HMIWWW.ViewModel.Module.Lite.Event.VM_EventCatalogue
@{
    Layout = "~/Views/Shared/_PopupLayout.cshtml";
}

<form asp-controller="EventsCatalogue" asp-action="AddEventCatalogue" data-ajax="true" data-ajax-method="POST"
      data-ajax-begin="OnFormBegin" data-ajax-success="OnFormSuccess" data-ajax-failure="OnFormError"
      class="container-fluid" target="formContainer" role="form" id="form">

    @*//@Html.AntiForgeryToken()
        //@Html.HiddenFor(x => x.Id);*@

    <div class="row form-group">
        <div class="col text-right">
            <label>@Html.LabelFor(x => x.EventCatalogueCode)</label>
        </div>
        <div class="col">
            @Html.Kendo().TextBoxFor(x => x.EventCatalogueCode).HtmlAttributes(new {@class = "form-control form-control-sm", onchange = "checkEventCodeValidity(" + "\"" + VM_Resources.GLOB_NameExists + "\"" + ");"})
            @Html.ValidationMessageFor(x => x.EventCatalogueCode)
        </div>
    </div>

    <div class="row form-group">
        <div class="col text-right">
            <label>@Html.LabelFor(x => x.EventCatalogueName)</label>
        </div>
        <div class="col">
            @Html.Kendo().TextBoxFor(x => x.EventCatalogueName).HtmlAttributes(new {@class = "form-control form-control-sm", onchange = "checkEventNameValidity(" + "\"" + VM_Resources.GLOB_NameExists + "\"" + ");"})
            @Html.ValidationMessageFor(x => x.EventCatalogueName)
        </div>
    </div>

    <div class="row form-group">

        <div class="col text-right">
            <label>@Html.LabelFor(x => x.EventCatalogueCategoryId)</label>
        </div>
        <div class="col">
            @(Html.Kendo().DropDownListFor(x => x.EventCatalogueCategoryId)
                .DataTextField("EventCatalogueCategoryName")
                .DataValueField("Id")
                .HtmlAttributes(new {@class = "form-control form-control-sm"})
                .DataSource(source =>
                {
                    source.Read(read => { read.Action("ServerFiltering_GetEventsCatalogue", "EventsCatalogue"); })
                        .ServerFiltering(true);
                })
                .OptionLabel("-")
                )
        </div>
    </div>

    <div class="row form-group">
        <div class="col text-right">
            <label>@Html.LabelFor(x => x.StdEventTime)</label>
        </div>
        <div class="col">
            @Html.PeKendo().NumericTextBoxFor(x => x.StdEventTime).HtmlAttributes(new {@class = "form-control form-control-sm"})
            @Html.ValidationMessageFor(x => x.StdEventTime)
        </div>
    </div>

    <div class="row form-group">
        <div class="col text-right">
            <label>@Html.LabelFor(x => x.EventDescription)</label>
        </div>
        <div class="col">
            @Html.Kendo().TextBoxFor(x => x.EventDescription).HtmlAttributes(new {@class = "form-control form-control-sm"})
            @Html.ValidationMessageFor(x => x.EventDescription)
        </div>
    </div>

    <div class="row form-group">

        <div class="col text-right">
            <label>@Html.LabelFor(x => x.ParentEventCatalogueId)</label>
        </div>
        <div class="col">
            @(Html.Kendo().DropDownListFor(x => x.ParentEventCatalogueId)
                .DataTextField("EventCatalogueCode")
                .DataValueField("Id")
                .HtmlAttributes(new {@class = "form-control form-control-sm"})
                .DataSource(source =>
                {
                    source.Read(read => { read.Action("ServerFiltering_GetEventCataloguesForParentSelector", "EventsCatalogue"); })
                        .ServerFiltering(true);
                })
                .OptionLabel("-")
                )
        </div>
    </div>
    <div class="row form-group">
        <div class="col text-right">
            <label>@Html.LabelFor(x => x.IsPlanned)</label>
        </div>
        <div class="col">
            @Html.Kendo().CheckBoxFor(x => x.IsPlanned).HtmlAttributes(new {@class = "form-control"}).Label(string.Empty)
        </div>
    </div>
    <div class="row form-group">
        <div class="col text-right">
            <label>@Html.LabelFor(x => x.IsDefault)</label>
        </div>
        <div class="col">
            @Html.Kendo().CheckBoxFor(x => x.IsDefault).HtmlAttributes(new {@class = "form-control"}).Label(string.Empty)
        </div>
    </div>
    <div class="row form-group">
        <div class="col text-right">
            <label>@Html.LabelFor(x => x.IsActive)</label>
        </div>
        <div class="col">
            @Html.Kendo().CheckBoxFor(x => x.IsActive).HtmlAttributes(new {@class = "form-control"}).Label(string.Empty)
        </div>
    </div>

    <hr/>

    <div class="row form-group">
        <div class="col invalid">
            <p id="error">
                <span class="k-icon k-i-close-circle error-icon"></span> @VM_Resources.GLOB_Error
            </p>
        </div>
        <div class="col text-right">
            <button class="btn btn-primary popup_button" type="submit" onclick="displayMessage()">
                @VM_Resources.GLOB_Form_Button_Save
            </button>
        </div>
    </div>
</form>

<script>
    $(function () {

        $("#form").kendoValidator().data("kendoValidator");

    });

    function displayMessage() {

        var validator = $("#form").kendoValidator().data("kendoValidator");

        if (validator.validate()) {
            $('#error').css("display", "none");
        } else {
            $('#error').css("display", "block");
            $('#popup-footer')
                .css('display', 'block')
                .css('background-color', 'rgb(206, 0, 55)');
        }
    }
</script>
