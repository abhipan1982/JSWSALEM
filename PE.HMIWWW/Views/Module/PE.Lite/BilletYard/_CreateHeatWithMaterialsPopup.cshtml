
@model PE.HMIWWW.ViewModel.Module.Lite.Heat.VM_Heat
@{
  /**/

  ViewBag.Title = "_HeatCreatePopup";
  Layout = "~/Views/Shared/_PopupLayout.cshtml";
}

<form asp-controller="BilletYard" asp-action="CreateHeatWithMaterials" data-ajax="true" data-ajax-method="POST"
      data-ajax-begin="OnFormBegin" data-ajax-success="OnFormSuccess" data-ajax-failure="OnFormError"
      class="container-fluid" target="formContainer" role="form" id="form">

  @Html.AntiForgeryToken()
  <div style="height:auto;overflow-x:hidden">
    <div class="row form-group">

      <div class="col-3 text-right">
        <label>
          @Html.LabelFor(x => x.HeatName)
        </label>
      </div>
      <div class="col-3">
        @Html.Kendo().TextBoxFor(x => x.HeatName).HtmlAttributes(new { @class = "form-control form-control-sm popup_input_standard" })
        @Html.ValidationMessageFor(x => x.HeatName)
      </div>

      <div class="col-3 text-right">
        <label>@Html.LabelFor(x => x.IsDummy)</label>
      </div>
      <div class="col-3 mt-1">
        @Html.Kendo().CheckBoxFor(x => x.IsDummy).HtmlAttributes(new { @class = "form-control" }).Label(String.Empty)
      </div>

      @*<div class="col-3 text-right">
        <label>@Html.LabelFor(x => x.FKHeatSupplierId)</label>
      </div>
      <div class="col-3">
        @(Html.Kendo().DropDownListFor(x => x.FKHeatSupplierId)
            .Name("FKHeatSupplierId")
            .DataTextField("Text")
            .DataValueField("Value")
            .HtmlAttributes(new { @class = "form-control form-control-sm popup_input_standard" })
            .BindTo(new SelectList(@ViewBag.SupplierList, "HeatSupplierId", "SupplierName"))
            .OptionLabel("-")
        )
      </div>*@

    </div>
    <div class="row form-group">
      <div class="col-3 text-right">
        <label>@Html.LabelFor(x => x.FKSteelgradeId)</label>
      </div>
      <div class="col-3">
        @(Html.Kendo().DropDownListFor(x => x.FKSteelgradeId)
               .HtmlAttributes(new { @style = "width: 150px;" })
               .OptionLabel("-")
               .DataTextField("SteelgradeName")
               .DataValueField("Id")
               .DataSource(source =>
                     {
                   source.Read(read =>
                   {
                       read.Action("ServerFiltering_GetSteelgrades", "Steelgrade");
                   })
                   .ServerFiltering(true);
               })
        )
        @Html.ValidationMessageFor(x => x.FKSteelgradeId)
      </div>

      <div class="col-3 text-right">
        <label>
          @Html.LabelFor(x => x.HeatWeight)
        </label>
      </div>
      <div class="col">
        @Html.PeKendo().NumericTextBoxFor(x => x.HeatWeight).HtmlAttributes(new { @class = "form-control form-control-sm", @style = "width: 150px" })
        @Html.ValidationMessageFor(x => x.HeatWeight)
      </div>
      @*<div class="col-2 text-right"></div>
      <div class="col-2"></div>*@
    </div>

    <div class="row form-group">
      <div class="col-3 text-right">
        <label>@Html.LabelFor(x => x.FKHeatSupplierId)</label>
      </div>
      <div class="col-3">
        @(Html.Kendo().DropDownListFor(x => x.FKHeatSupplierId)
            .DataTextField("Text")
            .DataValueField("Value")
            .HtmlAttributes(new { @class = "form-control form-control-sm popup_input_standard" })
            .BindTo(new SelectList(@ViewBag.SupplierList, "HeatSupplierId", "HeatSupplierName"))
            .OptionLabel("-")
        )
      </div>

    </div>

  </div>
  <hr>

  <div class="row form-group">
    <div class="col-3 text-right">
      <label>
        @Html.LabelFor(x => x.MaterialsNumber)
      </label>
    </div>
    <div class="col-3">
      @Html.PeKendo().NumericTextBoxFor(x => x.MaterialsNumber).HtmlAttributes(new { @class = "form-control form-control-sm", @style = "width: 150px" }).Min(1).Max(1000)
      @Html.ValidationMessageFor(x => x.MaterialsNumber)
    </div>
 
    <div class="col-3 text-right">
      <label>@Html.LabelFor(x => x.MaterialCatalogueId)</label>
    </div>

    <div class="col-3">
      @(Html.Kendo().DropDownListFor(x => x.MaterialCatalogueId)
       .DataTextField("Text")
       .DataValueField("Value")
       .HtmlAttributes(new { @class = "form-control form-control-sm popup_input_standard" })
       .BindTo(new SelectList(@ViewBag.MaterialCataloguesList, "MaterialCatalogueId", "MaterialCatalogueName"))
       .OptionLabel("-")
      //.Events(x => x.Change("CalculateMaterialsWeight"))
      )
    </div>
  </div>



  <hr>

  <div class="row form-group">
    <div class="col invalid">
      <p id="error">
        <span class="k-icon k-i-close-circle error-icon"></span> @VM_Resources.GLOB_Error
      </p>
    </div>
    <div class="col text-right">
      <button class="btn btn-primary popup_button" onclick="displayMessage()" type="submit">
        @VM_Resources.GLOB_Form_Button_Add
      </button>
    </div>
  </div>

</form>

<script>
$(function () {

    $('#error').css("display", "none");
    $("#form").kendoValidator().data("kendoValidator");

    $('.k-autocomplete').css("width", "150px");

    $('.k-autocomplete input').keydown(function () {
    $('.k-autocomplete').animate({
        width: 400
    }, 200, function () {
        // Animation complete.
    });
    })

    $('.k-autocomplete input').focusout(function () {
    $('.k-autocomplete').animate({
        width: 150
    }, 400, function () {
        // Animation complete.
    });
    })


});

$(function () {

    $('#error').css("display", "none");
    $("#form").kendoValidator().data("kendoValidator");

});

function displayMessage() {

    var validator = $("#form").kendoValidator().data("kendoValidator");

    if (validator.validate()) {
    $('#error').css("display", "none");
    } else {
    $('#error').css("display", "block");
    $('#popup-footer')
        .css('display', 'block')
        .css('background-color', 'rgb(206, 0, 55)');
    }
}
</script>
