@model PE.HMIWWW.ViewModel.Module.Lite.Maintenance.VM_EquipmentStatus
@{
  Layout = "~/Views/Shared/_PopupLayout.cshtml";
}

<form asp-controller="Equipment" asp-action="UpdateEquipmentStatus" data-ajax="true" data-ajax-method="POST"
      data-ajax-begin="OnFormBegin" data-ajax-success="OnFormSuccess" data-ajax-failure="OnFormError"
      class="container-fluid" target="formContainer" role="form" id="form">

  @Html.AntiForgeryToken()
  @Html.HiddenFor(x => x.EquipmentId)

  <div style="height:auto;overflow-x:hidden">

    <div class="row form-group">
      <div class="col text-right">
        <label>@Html.LabelFor(x => x.EquipmentStatus)</label>
      </div>
      <div class="col">
        @(Html.Kendo().DropDownListFor(x => x.EquipmentStatus)
            .DataTextField("Text")
            .DataValueField("Value")
            .HtmlAttributes(new { @class = "form-control form-control-sm" })
            .BindTo((SelectList)ViewBag.EquipmentStatus)
            )
      </div>
    </div>

    <div class="row form-group">
      <div class="col text-right">
        <label>@Html.LabelFor(x => x.EnumServiceType)</label>
      </div>
      <div class="col">
        @(Html.Kendo().DropDownListFor(x => x.EnumServiceType)
            .DataTextField("Text")
            .DataValueField("Value")
            .HtmlAttributes(new { @class = "form-control form-control-sm" })
            .BindTo((SelectList)ViewBag.EquipmentServiceType)
            )
      </div>
    </div>

    <div class="row form-group">
      <div class="col text-right">
        <label>@Html.LabelFor(x => x.AlarmValue)</label>
      </div>
      <div class="col">
        @Html.PeKendo().NumericTextBoxFor(x => x.AlarmValue).HtmlAttributes(new { @class = "form-control form-control-sm" })
        @Html.ValidationMessageFor(x => x.AlarmValue)
      </div>
    </div>

    <div class="row form-group">
      <div class="col text-right">
        <label>@Html.LabelFor(x => x.WarningValue)</label>
      </div>
      <div class="col">
        @Html.PeKendo().NumericTextBoxFor(x => x.WarningValue).HtmlAttributes(new { @class = "form-control form-control-sm" })
        @Html.ValidationMessageFor(x => x.WarningValue)
      </div>
    </div>

    <div class="row form-group">
      <div class="col text-right">
        <label>@Html.LabelFor(x => x.ServiceExpires)</label>
      </div>
      <div class="col">
        @Html.Kendo().DatePickerFor(m => m.ServiceExpires).HtmlAttributes(new { @class = "form-control form-control-sm" })
        @Html.ValidationMessageFor(m => m.ServiceExpires)
      </div>
    </div>

    <div class="row form-group">
      <div class="col text-right">
        <label>@Html.LabelFor(x => x.Remark)</label>
      </div>
      <div class="col">
        @Html.Kendo().TextBoxFor(x => x.Remark).HtmlAttributes(new { @class = "form-control form-control-sm" })
        @Html.ValidationMessageFor(x => x.Remark)
      </div>
    </div>

  </div>

  <hr />

  <div class="row form-group">
    <div class="col invalid">
      <p id="error">
        <span class="k-icon k-i-close-circle error-icon"></span> @VM_Resources.GLOB_Error
      </p>
    </div>
    <div class="col text-right">
      <input type="submit" class="btn btn-primary popup_button" onclick="displayMessage()" value="@VM_Resources.BUTTON_edit" />
    </div>
  </div>

</form>

<script>

  $(function () {

      $("#form").kendoValidator().data("kendoValidator");

  });

  function displayMessage() {

      var validator = $("#form").kendoValidator().data("kendoValidator");

      if (validator.validate()) {
          $('#error').css("display", "none");
      } else {
          $('#error').css("display", "block");
          $('#popup-footer')
              .css('display', 'block')
              .css('background-color', 'rgb(206, 0, 55)');
      }
  }

</script>
