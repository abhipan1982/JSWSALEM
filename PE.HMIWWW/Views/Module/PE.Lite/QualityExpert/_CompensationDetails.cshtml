@model long

@(Html.Kendo().Grid<PE.HMIWWW.ViewModel.Module.Lite.QualityExpert.VM_Compensation>()
    .Name("CompensationDetails" + Model)
    .NoRecords(x => x.Template(VM_Resources.GLOB_GRID_NO_DATA))
    .Filterable()
    .Pageable(p => p
      .Messages(m => m.Display(VM_Resources.GLOB_pagination)))
    .HtmlAttributes(new { style = "min-height: 30px;" })
    .Columns(c =>
    {
        c.Bound(r => r.FKRatingId).Visible(false);
        c.Bound(r => r.CompensationId).Visible(false);
        c.Bound(r => r.FKCompensationTypeId).Visible(false);
        c.Bound(r => r.Aggregates).Width(25);
        c.Bound(r => r.CompensationName).Width(100);
        c.ForeignKey(r => r.CompensationAlternative, new SelectList(ViewBag.RatingValuesTypes, "Key", "Value")).Width(125);
        c.Bound(r => r.CompensationInfo).Sortable(false).Filterable(false).Width(325);
        c.Bound(r => r.CompensationDetail).Sortable(false).Filterable(false).Width(325);
        c.Bound(r => r.CompensationType).Width(20);
        c.Bound(r => r.CompensationId).Title("&nbsp;").Sortable(false).Filterable(false)
          .ClientTemplate("#=compensationStateIcon(IsChosen,CompensationId,FKRatingId)#")
          .Width(35);
    })
    .DataSource(dataSource => dataSource
      .Ajax()
      .Sort(sort => sort.Add(s => s.CompensationId))
      .Read(read => read.Action("Compensations", "QualityExpert", new { ratingId = Model })))
      )

<script>
    RegisterMethod(HmiRefreshKeys.SetCompensation, RefreshData);
</script>
