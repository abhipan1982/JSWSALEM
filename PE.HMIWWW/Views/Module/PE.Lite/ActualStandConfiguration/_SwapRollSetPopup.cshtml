@model PE.HMIWWW.ViewModel.Module.Lite.ActualStandConfiguration.VM_RollChangeOperation
@{
  Layout = "~/Views/Shared/_PopupLayout.cshtml";
}

@if (Model != null && !@ViewData.ModelState.IsValid)
{
  <script>
    $(document).ready(function () {
      $("#header").css('background', '#ce0037').css('color', '#fff');
    })
  </script>
}

<form asp-controller="ActualStandConfiguration" asp-action="SwapRollSet" data-ajax="true" data-ajax-method="POST"
      data-ajax-begin="OnFormBegin" data-ajax-success="OnFormSuccess" data-ajax-failure="OnFormError"
      class="container-fluid" target="formContainer" role="form" id="form">
  @Html.AntiForgeryToken()
  @Html.HiddenFor(model => model.StandId)
  @Html.HiddenFor(model => model.EnumStandStatus)
  @Html.HiddenFor(model => model.Arrangement)
  @Html.HiddenFor(model => model.StandNo)
  @Html.HiddenFor(model => model.CassetteId)
  @Html.HiddenFor(model => model.RollsetToBeDismountedId)
  @Html.HiddenFor(model => model.PositionInCassette)

  <div class="row form-group">
    <div class="col text-right align-self-center">
      <label>@Html.LabelFor(x => x.StandNo)</label>
    </div>
    <div class="col">
      @Html.DisplayFor(m => m.StandNo)

    </div>
  </div>

  <div class="row form-group">
    <div class="col text-right align-self-center">
      <label>@Html.LabelFor(x => x.Arrangement)</label>
    </div>
    <div class="col">
      @Html.Raw(((SelectList)ViewBag.Arrang).Where(p => p.Value == Model.Arrangement.ToString()).First().Text)

    </div>
  </div>

  <div class="row form-group">
    <div class="col text-right align-self-center">
      <label>@Html.LabelFor(x => x.EnumStandStatus)</label>
    </div>
    <div class="col">
      @Html.Raw(((SelectList)ViewBag.StandStat).Where(p => p.Value == Model.EnumStandStatus.ToString()).First().Text)

    </div>
  </div>

  <div class="row form-group">
    <div class="col text-right align-self-center">
      <label>@Html.LabelFor(x => x.RollsetToBeDismounted)</label>
    </div>
    <div class="col">
      @Html.DisplayFor(m => m.RollsetToBeDismounted)

    </div>
  </div>

  <div class="row form-group">
    <div class="col text-right align-self-center">
      <label>@Html.LabelFor(x => x.CassetteName)</label>
    </div>
    <div class="col">
      @Html.DisplayFor(m => m.CassetteName)

    </div>
  </div>

  <div class="row form-group">
    <div class="col text-right align-self-center">
      <label>@Html.LabelFor(x => x.PositionInCassette)</label>
    </div>
    <div class="col">
      @Html.DisplayFor(m => m.PositionInCassette)

    </div>
  </div>

  <div class="row form-group">
    <div class="col text-right align-self-center">
      <label>@Html.LabelFor(x => x.Mounted)</label>
    </div>
    <div class="col">
      @Html.DisplayFor(m => m.Mounted)

    </div>
  </div>

  <div class="row form-group">
    <div class="col text-right align-self-center">
      <label>@Html.LabelFor(x => x.RollsetToBeMounted)</label>
    </div>
    <div class="col">
      @(Html.Kendo()
        .DropDownList()
        .Name("RollsetToBeMountedId")
        .DataTextField("Text")
        .DataValueField("Value")
        .Value(Model.RollsetToBeMountedId.ToString())
        .HtmlAttributes(new { style = "width:220px" })
        .DataSource(source =>
        {
            source.Read(read =>
            {
            read.Action("GetAvailableRollsets", "ActualStandConfiguration", new { type = Model.EnumCassetteType });
            });
        }))

      @Html.ValidationMessageFor(m => m.RollsetToBeMountedId)
    </div>
  </div>

  <hr />

  <div class="row form-group">
    <div class="col invalid">
      <p id="error">
        <span class="k-icon k-i-close-circle error-icon"></span> @VM_Resources.GLOB_Error
      </p>
    </div>
    <div class="col text-right">
      <button class="btn btn-primary popup_button" onclick="displayMessage()" type="submit">
        @VM_Resources.BUTTON_SubmitForm
      </button>
    </div>
  </div>
</form>
