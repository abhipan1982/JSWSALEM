@model PE.HMIWWW.ViewModel.Module.Lite.Material.VM_MaterialCatalogue
@{
  ViewBag.Title = VM_Resources.PAGE_TITLE_BilletCatalogue_EditBilletCatalogueDialog;
  Layout = "~/Views/Shared/_PopupLayout.cshtml";
}

<form asp-controller="BilletCatalogue" asp-action="UpdateMaterialCatalogue" data-ajax="true" data-ajax-method="POST"
      data-ajax-begin="OnFormBegin" data-ajax-success="OnFormSuccess" data-ajax-failure="OnFormError"
      class="container-fluid" target="formContainer" role="form" id="form">

  @Html.AntiForgeryToken()
  @Html.HiddenFor(x => x.Id)

  <div class="container-fluid" id="MaterialCatalogueEditForm">

    <div class="row form-group">

      <div class="col text-right">
        <label>
          @Html.LabelFor(x => x.MaterialCatalogueName)
        </label>
      </div>
      <div class="col ">
        @* @Html.Kendo().TextBoxFor(x => x.MaterialName).HtmlAttributes(new {@class = "form-control form-control-sm popup_input_standard"  })*@
        @Html.Kendo().TextBoxFor(x => x.MaterialCatalogueName).HtmlAttributes(new { @class = "form-control form-control-sm popup_input_standard" })
        @Html.ValidationMessageFor(x => x.MaterialCatalogueName)
      </div>

      <div class="col text-right">
        <label>
          @Html.LabelFor(x => x.ExternalMaterialCatalogueName)
        </label>
      </div>
      <div class="col ">
        @* @Html.Kendo().TextBoxFor(x => x.MaterialName).HtmlAttributes(new {@class = "form-control form-control-sm popup_input_standard"  })*@
        @Html.Kendo().TextBoxFor(x => x.ExternalMaterialCatalogueName).HtmlAttributes(new { @class = "form-control form-control-sm popup_input_standard" })
        @Html.ValidationMessageFor(x => x.MaterialCatalogueName)
      </div>
    </div>

    <div class="row form-group">

      <div class="col text-right">
        <label>@Html.LabelFor(x => x.MaterialCatalogueTypeSymbol)</label>
      </div>

      <div class="col">
        @(Html.Kendo().DropDownListFor(x => x.TypeId)
            .DataTextField("Name")
            .DataValueField("Id")
            .HtmlAttributes(new {@class = "form-control form-control-sm popup_input_standard", style = "width: 150px"})
            .DataSource(source =>
            {
                source.Read(read => { read.Action("ServerFiltering_GetTypes", "BilletCatalogue"); })
                    .ServerFiltering(true);
            })
            .OptionLabel("-")
            )
      </div>

      <div class="col text-right">
        <label>@Html.LabelFor(x => x.ShapeId)</label>
      </div>
      <div class="col">
        @(Html.Kendo().DropDownListFor(x => x.ShapeId)
            .DataTextField("Name")
            .DataValueField("Id")
            .HtmlAttributes(new {@class = "form-control form-control-sm popup_input_standard", style = "width: 150px"})
            .DataSource(source =>
            {
                source.Read(read => { read.Action("ServerFiltering_GetShapes", "BilletCatalogue"); })
                    .ServerFiltering(true);
            })
            .OptionLabel("-")
            )
      </div>

    </div>
    <div class="row form-group">
      <div class="col text-right">
        <label>
          @Html.LabelFor(x => x.Description)
        </label>
      </div>
      <div class="col">
        @Html.Kendo().TextBoxFor(x => x.Description).HtmlAttributes(new { @class = "form-control form-control-sm popup_input_standard" })
        @Html.ValidationMessageFor(x => x.Description)
      </div>

      <div class="col text-right">
        <label>&nbsp;</label>
    </div>
    <div class="col">
        <label style="width: 150px;">&nbsp;</label>
    </div>
    </div>

    <hr class="mb-4" />

    <div class="row form-group">

      <div class="col text-right">
        <label>
          @Html.LabelFor(x => x.LengthMin)
        </label>
      </div>
      <div class="col">
        @Html.PeKendo().NumericTextBoxFor(x => x.LengthMin).HtmlAttributes(new { @class = "form-control form-control-sm", style = "width: 150px" })
        @Html.ValidationMessageFor(x => x.LengthMin)
      </div>

      <div class="col text-right">
        <label>
          @Html.LabelFor(x => x.LengthMax)
        </label>
      </div>
      <div class="col">
        @Html.PeKendo().NumericTextBoxFor(x => x.LengthMax).HtmlAttributes(new { @class = "form-control form-control-sm", style = "width: 150px" })
        @Html.ValidationMessageFor(x => x.LengthMax)
      </div>

    </div>
    <div class="row form-group">

      <div class="col text-right">
        <label>
          @Html.LabelFor(x => x.WidthMin)
        </label>
      </div>
      <div class="col">
        @Html.PeKendo().NumericTextBoxFor(x => x.WidthMin).HtmlAttributes(new { @class = "form-control form-control-sm", style = "width: 150px" })
        @Html.ValidationMessageFor(x => x.WidthMin)

      </div>

      <div class="col text-right">
        <label>
          @Html.LabelFor(x => x.WidthMax)
        </label>
      </div>
      <div class="col">
        @Html.PeKendo().NumericTextBoxFor(x => x.WidthMax).HtmlAttributes(new { @class = "form-control form-control-sm", style = "width: 150px" })
        @Html.ValidationMessageFor(x => x.WidthMax)

      </div>

    </div>

    <div class="row form-group">

      <div class="col text-right">
        <label>
          @Html.LabelFor(x => x.ThicknessMin)
        </label>
      </div>
      <div class="col">
        @Html.PeKendo().NumericTextBoxFor(x => x.ThicknessMin).HtmlAttributes(new { @class = "form-control form-control-sm", style = "width: 150px" })
        @Html.ValidationMessageFor(x => x.ThicknessMin)
      </div>

      <div class="col text-right">
        <label>
          @Html.LabelFor(x => x.ThicknessMax)
        </label>
      </div>
      <div class="col">
        @Html.PeKendo().NumericTextBoxFor(x => x.ThicknessMax).HtmlAttributes(new { @class = "form-control form-control-sm", style = "width: 150px" })
        @Html.ValidationMessageFor(x => x.ThicknessMax)
      </div>

    </div>

    <div class="row form-group">

      <div class="col text-right">
        <label>
          @Html.LabelFor(x => x.WeightMin)
        </label>
      </div>
      <div class="col">
        @Html.PeKendo().NumericTextBoxFor(x => x.WeightMin).HtmlAttributes(new { @class = "form-control form-control-sm", style = "width: 150px" })
        @Html.ValidationMessageFor(x => x.WeightMin)

      </div>

      <div class="col text-right">
        <label>
          @Html.LabelFor(x => x.WeightMax)
        </label>
      </div>
      <div class="col">
        @Html.PeKendo().NumericTextBoxFor(x => x.WeightMax).HtmlAttributes(new { @class = "form-control form-control-sm", style = "width: 150px" })
        @Html.ValidationMessageFor(x => x.WeightMax)

      </div>
    </div>

    <hr />


    <div class="row form-group">
      <div class="col invalid">
        <p id="error">
          <span class="k-icon k-i-close-circle error-icon"></span> @VM_Resources.GLOB_Error
        </p>
      </div>
      <div class="col text-right">
        <input type="submit" class="btn btn-primary popup_button" onclick="displayMessage()" value="@VM_Resources.GLOB_Form_Button_Update" />
      </div>
    </div>

  </div>
</form>

<script>

  $(function () {

    $("#form").kendoValidator().data("kendoValidator");

  });

  function displayMessage() {

    var validator = $("#form").kendoValidator().data("kendoValidator");

    if (validator.validate()) {
      $('#error').css("display", "none");
    } else {
      $('#error').css("display", "block");
      $('#popup-footer')
        .css('display', 'block')
        .css('background-color', 'rgb(206, 0, 55)');
    }
  }

</script>
