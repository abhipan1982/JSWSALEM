@using Kendo.Mvc.UI
@using PE.HMIWWW.Core.Resources;
@model PE.HMIWWW.Areas.MillConfigurator.ViewModels.TrackingInstruction.VM_TrackingInstruction
@{
  Layout = "~/Views/Shared/_PopupLayout.cshtml";
}

<script>

  $(document).ready(function () {
      $("#FKParentTrackingInstructionId").data("kendoDropDownList").value(@Model.FKParentTrackingInstructionId);
  });

</script>

<form asp-controller="TrackingInstruction" asp-action="EditTrackingInstruction" data-ajax="true" data-ajax-method="POST"
      data-ajax-begin="OnFormBegin" data-ajax-success="OnFormSuccess" data-ajax-failure="OnFormError"
      class="container-fluid" target="formContainer" role="form" id="form">

  @Html.AntiForgeryToken()
  @Html.HiddenFor(x => x.TrackingInstructionId)

  <div style="height:auto;overflow-x:hidden">

    <div class="row form-group">

      <div class="col-2 text-right">
        <label>
          @Html.LabelFor(x => x.FKFeatureId)
        </label>
      </div>
      <div class="col-10">
        @(Html.Kendo().DropDownListFor(x => x.FKFeatureId)
            .DataTextField("Text")
            .DataValueField("Value")
            .BindTo(new SelectList(ViewBag.FeatureList, "FeatureId", "FeatureName"))
            .HtmlAttributes(new { @class = "form-control form-control-sm popup_input_long" })
            .Filter(FilterType.Contains)
            )
        @Html.ValidationMessageFor(x => x.FKFeatureId)
      </div>

    </div>

    <div class="row form-group">

      <div class="col-2 text-right">
        <label>
          @Html.LabelFor(x => x.FKAreaAssetId)
        </label>
      </div>
      <div class="col-10">
        @(Html.Kendo().DropDownListFor(x => x.FKAreaAssetId)
            .DataTextField("Text")
            .DataValueField("Value")
            .BindTo(new SelectList(ViewBag.AreaList, "AssetId", "AssetName"))
            .HtmlAttributes(new { @class = "form-control form-control-sm popup_input_long" })
            .Filter(FilterType.Contains)
            )
        @Html.ValidationMessageFor(x => x.FKAreaAssetId)
      </div>

    </div>

    <div class="row form-group">

      <div class="col-2 text-right">
        <label>
          @Html.LabelFor(x => x.FKParentTrackingInstructionId)
        </label>
      </div>
      <div class="col-10">
        @(Html.Kendo().DropDownList()
            .Name("FKParentTrackingInstructionId")
            .HtmlAttributes(new { @class = "form-control form-control-sm popup_input_long", @id = "FKParentTrackingInstructionId" })
            .DataTextField("FeatureName")
            .DataValueField("TrackingInstructionId")
            .Filter(FilterType.Contains)
            .OptionLabel("-")
            .DataSource(source =>
            {
              source.Read(r =>
              {
                r.Action("GetTrackingInstructionListForInput", "TrackingInstruction", new { Area = "MillConfigurator" });
              });
            })
            .Template("<span class=\"sql-data-type-name\">#: data.FeatureName # in #: data.AreaName # </span></br><span> Seq: #: data.SeqNo #</span></br><span> Value: #: data.TrackingInstructionValue #</span>")
            .ValueTemplate("#: data.FeatureName #")
            )
      </div>

    </div>

    <div class="row form-group">

      <div class="col-2 text-right">
        <label>
          @Html.LabelFor(x => x.EnumTrackingInstructionType)
        </label>
      </div>
      <div class="col-10">
        @(Html.Kendo().DropDownListFor(x => x.EnumTrackingInstructionType)
            .DataTextField("Text")
            .DataValueField("Value")
            .BindTo((SelectList)ViewBag.TrackingInstructionTypeList)
            .HtmlAttributes(new { @class = "form-control form-control-sm popup_input_long" })
            .Filter(FilterType.Contains)
            )
        @Html.ValidationMessageFor(x => x.EnumTrackingInstructionType)
      </div>

    </div>

    <div class="row form-group">

      <div class="col-2 text-right">
        <label>
          @Html.LabelFor(x => x.FKPointAssetId)
        </label>
      </div>
      <div class="col-10">
        @(Html.Kendo().DropDownListFor(x => x.FKPointAssetId)
            .DataTextField("Text")
            .DataValueField("Value")
            .OptionLabel("-")
            .BindTo(new SelectList(ViewBag.AssetList, "AssetId", "AssetName"))
            .HtmlAttributes(new { @class = "form-control form-control-sm popup_input_long" })
            .Filter(FilterType.Contains)
            )
        @Html.ValidationMessageFor(x => x.FKPointAssetId)
      </div>

    </div>

    <hr />

    <div class="row form-group">

      <div class="col-2 text-right">
        <label>
          @Html.LabelFor(x => x.TrackingInstructionValue)
        </label>
      </div>
      <div class="col-2">
        @Html.PeKendo().NumericTextBoxFor(x => x.TrackingInstructionValue).HtmlAttributes(new {@class = "form-control form-control-sm popup_input_standard"})
        @Html.ValidationMessageFor(x => x.TrackingInstructionValue)
      </div>

      <div class="col-2 text-right">
        <label>
          @Html.LabelFor(x => x.ChannelId)
        </label>
      </div>
      <div class="col-2">
        @Html.PeKendo().NumericTextBoxFor(x => x.ChannelId).HtmlAttributes(new {@class = "form-control form-control-sm popup_input_standard"})
        @Html.ValidationMessageFor(x => x.ChannelId)
      </div>

      <div class="col-2 text-right">
        <label>
          @Html.LabelFor(x => x.TimeFilter)
        </label>
      </div>
      <div class="col-2">
        @Html.PeKendo().NumericTextBoxFor(x => x.TimeFilter).HtmlAttributes(new {@class = "form-control form-control-sm popup_input_standard"})
        @Html.ValidationMessageFor(x => x.TimeFilter)
      </div>

    </div>

    <div class="row form-group">

      <div class="col-2 text-right">
        <label>
          @Html.LabelFor(x => x.IsAsync)
        </label>
      </div>
      <div class="col-2">
        @Html.Kendo().CheckBoxFor(x => x.IsAsync).HtmlAttributes(new {@class = "form-control form-control-sm popup_input_standard"}).Label(string.Empty)
        @Html.ValidationMessageFor(x => x.IsAsync)
      </div>

      <div class="col-2 text-right">
        <label>
          @Html.LabelFor(x => x.IsIgnoredIfSimulation)
        </label>
      </div>
      <div class="col-2">
        @Html.Kendo().CheckBoxFor(x => x.IsIgnoredIfSimulation).HtmlAttributes(new {@class = "form-control form-control-sm popup_input_standard"}).Label(string.Empty)
        @Html.ValidationMessageFor(x => x.IsIgnoredIfSimulation)
      </div>

      <div class="col-2 text-right">
        <label>
          @Html.LabelFor(x => x.SeqNo)
        </label>
      </div>
      <div class="col-2">
        @Html.PeKendo().NumericTextBoxFor(x => x.SeqNo).HtmlAttributes(new {@class = "form-control form-control-sm popup_input_standard"})
        @Html.ValidationMessageFor(x => x.SeqNo)
      </div>

    </div>

  </div>

  <hr>

  <div class="row form-group">
    <div class="col invalid">
      <p id="error">
        <span class="k-icon k-i-close-circle error-icon"></span> @VM_Resources.GLOB_Error
      </p>
    </div>
    <div class="col text-right">
      <button class="btn btn-primary popup_button" onclick="displayMessage()" type="submit">
        @VM_Resources.BUTTON_edit
      </button>
    </div>
  </div>

</form>

<script>

  $(function () {

      $('#error').css("display", "none");
      $("#form").kendoValidator().data("kendoValidator");
  });

  function displayMessage() {
      var validator = $("#form").kendoValidator().data("kendoValidator");

      if (validator.validate()) {
          $('#error').css("display", "none");
      } else {
          $('#error').css("display", "block");
          $('#popup-footer')
              .css('display', 'block')
              .css('background-color', 'rgb(206, 0, 55)');
      }
  };

</script>
