@using Kendo.Mvc.UI;
@using PE.HMIWWW.Core.Resources;
@model PE.HMIWWW.Areas.MillConfigurator.ViewModels.MillConfiguration.VM_AssetInstance
@{
  Layout = "~/Views/Shared/_PopupLayout.cshtml";
}

<form asp-controller="MillConfiguration" asp-action="CreateAsset" data-ajax="true" data-ajax-method="POST"
      data-ajax-begin="OnFormBegin" data-ajax-success="OnFormSuccess" data-ajax-failure="OnFormError"
      class="container-fluid" target="formContainer" role="form" id="form">

  @Html.AntiForgeryToken()

  <div style="height:auto;overflow-x:hidden">

    <div class="row form-group">

      <div class="col-2 text-right">
        <label>
          @Html.LabelFor(x => x.AssetTemplateId)
        </label>
      </div>
      <div class="col-2">
        @(Html.Kendo().DropDownListFor(x => x.AssetTemplateId)
        .DataTextField("Text")
        .DataValueField("Value")
        .BindTo(new SelectList(ViewBag.AssetTemplateList, "AssetTemplateId", "AssetTemplateName"))
        .Filter(FilterType.Contains)
        .Events(e =>
        {
        e.Change("refreshTemplate");
        })
        .HtmlAttributes(new {@class = "form-control form-control-sm popup_input_standard"})
        )
        @Html.ValidationMessageFor(x => x.AssetTemplateId)
      </div>

      <div class="col-2 text-right">
        <label>
          @Html.LabelFor(x => x.AssetName)
        </label>
      </div>
      <div class="col-2">
        @Html.Kendo().TextBoxFor(x => x.AssetName).HtmlAttributes(new {@class = "form-control form-control-sm popup_input_standard", onkeypress="return removeSpaces(event)"})
        @Html.ValidationMessageFor(x => x.AssetName)
      </div>

      <div class="col-2 text-right">
        <label>
          @Html.LabelFor(x => x.FKAssetTypeId)
        </label>
      </div>
      <div class="col-2">
        @(Html.Kendo().DropDownListFor(x => x.FKAssetTypeId)
        .DataTextField("Text")
        .DataValueField("Value")
        .BindTo(new SelectList(ViewBag.AssetTypeList, "AssetTypeId", "AssetTypeName"))
        .HtmlAttributes(new {@class = "form-control form-control-sm popup_input_standard"})
        .Filter(FilterType.Contains)
        )
        @Html.ValidationMessageFor(x => x.FKAssetTypeId)
      </div>

    </div>

    <div class="row form-group">

      <div class="col-2 text-right">
        <label>
          @Html.LabelFor(x => x.IsActive)
        </label>
      </div>
      <div class="col-2">
        @Html.Kendo().CheckBoxFor(x => x.IsActive).HtmlAttributes(new {@class = "form-control form-control-sm popup_input_standard"}).Label(string.Empty)
        @Html.ValidationMessageFor(x => x.IsActive)
      </div>

      <div class="col-2 text-right">
        <label>
          @Html.LabelFor(x => x.IsTrackingPoint)
        </label>
      </div>
      <div class="col-2">
        @Html.Kendo().CheckBoxFor(x => x.IsTrackingPoint).HtmlAttributes(new {@class = "form-control form-control-sm popup_input_standard"}).Label(string.Empty)
        @Html.ValidationMessageFor(x => x.IsTrackingPoint)
      </div>

      <div class="col-2 text-right">
        <label>
          @Html.LabelFor(x => x.IsDelayCheckpoint)
        </label>
      </div>
      <div class="col-2">
        @Html.Kendo().CheckBoxFor(x => x.IsDelayCheckpoint).HtmlAttributes(new {@class = "form-control form-control-sm popup_input_standard"}).Label(string.Empty)
        @Html.ValidationMessageFor(x => x.IsDelayCheckpoint)
      </div>

    </div>

    <div class="row form-group">

      <div class="col-2 text-right">
        <label>
          @Html.LabelFor(x => x.IsReversible)
        </label>
      </div>
      <div class="col-2">
        @Html.Kendo().CheckBoxFor(x => x.IsReversible).HtmlAttributes(new {@class = "form-control form-control-sm popup_input_standard"}).Label(string.Empty)
        @Html.ValidationMessageFor(x => x.IsReversible)
      </div>

      <div class="col-2 text-right">
        <label>
          @Html.LabelFor(x => x.AssetDescription)
        </label>
      </div>
      <div class="col-2">
        @Html.Kendo().TextBoxFor(x => x.AssetDescription).HtmlAttributes(new {@class = "form-control form-control-sm popup_input_standard"})
        @Html.ValidationMessageFor(x => x.AssetDescription)
      </div>

    </div>

    <hr>

    <div class="row form-group" id="template-data" style="height: 430px;"></div>

  </div>

  <hr>

  <div class="row form-group">
    <div class="col invalid">
      <p id="error">
        <span class="k-icon k-i-close-circle error-icon"></span> @VM_Resources.GLOB_Error
      </p>
    </div>
    <div class="col text-right">
      <button class="btn btn-primary popup_button" onclick="displayMessage()" type="submit">
        @VM_Resources.GLOB_Form_Button_Add
      </button>
    </div>
  </div>

</form>

<script>

  $(function () {
    refreshTemplate();
    $('#error').css("display", "none");
    $("#form").kendoValidator().data("kendoValidator");
  });

  function displayMessage() {
    var validator = $("#form").kendoValidator().data("kendoValidator");

    if (validator.validate()) {
      $('#error').css("display", "none");
    } else {
      $('#error').css("display", "block");
      $('#popup-footer')
        .css('display', 'block')
        .css('background-color', 'rgb(206, 0, 55)');
    }
  };

</script>
